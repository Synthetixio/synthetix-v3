name = "synthetix-governance"
description = "On-chain voting for synthetix councils"
version = "4"

include = ["./cannonfile.toml", "./tomls/testable-contracts.toml"]

[setting.owner]
defaultValue = "0x73570075092502472e4b61a7058df1a4a1db12f2"

[setting.salt]
defaultValue = "governance-test-v4"

[setting.wormhole_core]
defaultValue = "0x31377888146f3253211EFEf5c676D41ECe7D58Fe" # https://docs.wormhole.com/wormhole/reference/constants

[setting.wormhole_relayer]
defaultValue = "0x93BAD53DDfB6132b0aC8E37f6029163E63372cEE" # https://docs.wormhole.com/wormhole/reference/constants

[setting.initial_council_member]
defaultValue = "<%= settings.owner %>"

[setting.minimum_active_members]
defaultValue = "1"

[setting.initial_nomination_period_start_date]
defaultValue = "0" # defaults to "block.timestamp + administration_period_duration" when given "0"

[setting.administration_period_duration]
defaultValue = "60" # days

[setting.nomination_period_duration]
defaultValue = "15" # days

[setting.voting_period_duration]
defaultValue = "15" # days

[contract.SnapshotRecordMock]
artifact = "contracts/mocks/SnapshotRecordMock.sol:SnapshotRecordMock"
salt = "<%= settings.salt %>"
create2 = true

[router.CoreRouter]
contracts = [
    # Core Contracts
    "AssociatedSystemsModule",
    "ElectionInspectorModule",
    "ElectionModule",
    "SnapshotVotePowerModule",
    "InitialModuleBundle",

    # Testable storage contracts
    "TestableCouncilStorage",
    "TestableBallotStorage",
    "TestableSnapshotVotePowerStorage",
    "TestableElectionSettingsStorage",
    "TestableElectionStorage",
    "TestableEpochStorage",
]

[invoke.set_registered_emitters]
target = ["GovernanceProxy"]
from = "<%= settings.owner %>"
func = "setRegisteredEmitters"
args = [["10003"], ["0xD9fA68AD1Cc69EB1e72B043ABe313c0191a38cB1"]]

[invoke.set_snapshot_record]
target = ["GovernanceProxy"]
from = "<%= settings.owner %>"
func = "setSnapshotContract"
args = ["<%= contracts.SnapshotRecordMock.address %>", true]
