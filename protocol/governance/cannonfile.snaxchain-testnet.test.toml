name = "synthetix-governance"
description = "On-chain voting for synthetix councils"
version = "8"
preset = "test"

include = ["./cannonfile.toml", "./tomls/testable-contracts.toml"]

[setting.owner]
defaultValue = "0xe2163dd599067919d1e9108929b568Bf41D3A420"

[setting.salt]
defaultValue = "governance-test-v8"

[setting.wormhole_core]
defaultValue = "0xBB73cB66C26740F31d1FabDC6b7A46a038A300dd" # https://testnet-explorer.snaxchain.io/address/0xBB73cB66C26740F31d1FabDC6b7A46a038A300dd

[contract.WormholeRelayerMock]
artifact = "contracts/mocks/WormholeRelayerMock.sol:WormholeRelayerMock"
args = ["<%= settings.wormhole_core %>"]

[setting.wormhole_relayer]
defaultValue = "<%= contracts.WormholeRelayerMock.address %>" # https://docs.wormhole.com/wormhole/reference/constants

[setting.initial_council_member]
defaultValue = "<%= settings.owner %>"

[setting.minimum_active_members]
defaultValue = "1"

[setting.initial_nomination_period_start_date]
defaultValue = "0" # defaults to "block.timestamp + administration_period_duration" when given "0"

[setting.administration_period_duration]
defaultValue = "60" # days

[setting.nomination_period_duration]
defaultValue = "15" # days

[setting.voting_period_duration]
defaultValue = "15" # days

[contract.SnapshotRecordMock]
artifact = "contracts/mocks/SnapshotRecordMock.sol:SnapshotRecordMock"
salt = "<%= settings.salt %>"
create2 = true

[router.CoreRouter]
contracts = [
    # Core Contracts
    "AssociatedSystemsModule",
    "ElectionInspectorModule",
    "ElectionModule",
    "SnapshotVotePowerModule",
    "InitialModuleBundle",

    # Testable storage contracts
    "TestableCouncilStorage",
    "TestableBallotStorage",
    "TestableSnapshotVotePowerStorage",
    "TestableElectionSettingsStorage",
    "TestableElectionStorage",
    "TestableEpochStorage",
]

[invoke.set_balance_of_on_period]
target = ["SnapshotRecordMock"]
from = "<%= settings.owner %>"
func = "setBalanceOfOnPeriod"
args = ["<%= settings.owner %>", "100", "1"]

[invoke.set_registered_emitters]
target = ["GovernanceProxy"]
from = "<%= settings.owner %>"
func = "setRegisteredEmitters"
args = [
    [
        "43",
    ],
    [
        "0x4066a172DD5D21E4f787C07D3118D0876296750B"
    ],
]

[invoke.set_gas_limit]
target = ["GovernanceProxy"]
from = "<%= settings.owner %>"
func = "setGasLimit"
args = ["1000000"]

[invoke.set_snapshot_record]
target = ["GovernanceProxy"]
from = "<%= settings.owner %>"
func = "setSnapshotContract"
args = ["<%= contracts.SnapshotRecordMock.address %>", 0, true,]