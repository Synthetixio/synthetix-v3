version = "<%= package.version %>-testable"
include = ["cannonfile.toml"]

[contract.SnapshotRecordMock]
artifact = "contracts/mocks/SnapshotRecordMock.sol:SnapshotRecordMock"

# Testable storage contracts
[contract.TestableCouncilStorage]
artifact = "contracts/generated/test/TestableCouncilStorage.sol:TestableCouncilStorage"

[contract.TestableBallotStorage]
artifact = "contracts/generated/test/TestableBallotStorage.sol:TestableBallotStorage"

[contract.TestableSnapshotVotePowerStorage]
artifact = "contracts/generated/test/TestableSnapshotVotePowerStorage.sol:TestableSnapshotVotePowerStorage"

[contract.TestableElectionSettingsStorage]
artifact = "contracts/generated/test/TestableElectionSettingsStorage.sol:TestableElectionSettingsStorage"

[contract.TestableElectionStorage]
artifact = "contracts/generated/test/TestableElectionStorage.sol:TestableElectionStorage"

# Core Router + Testable modules
[router.TestRouter]
contracts = [
    # Extend Original Core Router
    "CoreRouter",
    # Testable storage contracts
    "TestableCouncilStorage",
    "TestableBallotStorage",
    "TestableSnapshotVotePowerStorage",
    "TestableElectionSettingsStorage",
    "TestableElectionStorage",
]
depends = [
    "router.CoreRouter",
    "contract.TestableCouncilStorage",
    "contract.TestableBallotStorage",
    "contract.TestableSnapshotVotePowerStorage",
    "contract.TestableElectionSettingsStorage",
    "contract.TestableElectionStorage",
]

[invoke.upgrade_core_proxy]
target = ["InitialProxy"]
from = "<%= settings.owner %>"
func = "upgradeTo"
args = ["<%= contracts.TestRouter.address %>"]
factory.CoreProxy.abiOf = ["TestRouter"]
factory.CoreProxy.event = "Upgraded"
factory.CoreProxy.arg = 0
depends = ["contract.InitialProxy", "router.TestRouter"]
