name = "oracle-manager"
version = "<%= package.version %>"
description = "Core synthetix oracle manager"

[var.main]
# `salt` here only affects proxy contract
salt = "oracle-manager-official"
owner = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[deploy.NodeModule]
artifact = "contracts/modules/NodeModule.sol:NodeModule"

[deploy.CoreModule]
artifact = "contracts/modules/CoreModule.sol:CoreModule"
salt = "<%= settings.salt %>"
create2 = true

[deploy.InitialProxy]
artifact = "contracts/Proxy.sol:Proxy"
args = ["<%= contracts.CoreModule.address %>", "<%= settings.owner %>"]
salt = "<%= settings.salt %>"
abiOf = ["CoreModule"]
create2 = true

[router.OracleRouter]
contracts = ["CoreModule", "NodeModule"]

[invoke.upgrade_proxy]
target = ["InitialProxy"]
fromCall.func = "owner"
func = "upgradeTo"
args = ["<%= contracts.OracleRouter.address %>"]
factory.Proxy.abiOf = ["OracleRouter"]
factory.Proxy.event = "Upgraded"
factory.Proxy.arg = 0
factory.Proxy.highlight = true

[clone.trusted_multicall_forwarder]
source = "trusted-multicall-forwarder"
