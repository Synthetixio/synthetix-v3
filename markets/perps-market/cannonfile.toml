name = "synthetix-perps-market"
version = "<%= package.version %>"
description = "Perps market implementation"

[setting.coreProxyOwner]
description = "owner of v3 core proxy"
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[setting.owner]
description = "perps market owner"
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[setting.synthetixPackage]
defaultValue = "synthetix:<%= package.version %>"

[setting.synthetixPreset]
defaultValue = "main"

[setting.spotMarketPreset]
defaultValue = "main"

[setting.spotMarketPackage]
defaultValue = "synthetix-spot-market:<%= package.version %>"

[setting.salt]
defaultValue = "snax"

[import.synthetix]
source = "<%= settings.synthetixPackage %>"
preset = "<%= settings.synthetixPreset %>"

[import.spotMarket]
source = "<%= settings.spotMarketPackage %>"
preset = "<%= settings.spotMarketPreset %>"

[contract.PerpsMarketFactoryModule]
artifact = "PerpsMarketFactoryModule"

[contract.AsyncOrderModule]
artifact = "AsyncOrderModule"

[contract.AsyncOrderSettlementEIP3668Module]
artifact = "AsyncOrderSettlementEIP3668Module"

[contract.AsyncOrderSettlementPythModule]
artifact = "AsyncOrderSettlementPythModule"

[contract.AsyncOrderCancelModule]
artifact = "AsyncOrderCancelModule"

[contract.PerpsAccountModule]
artifact = "PerpsAccountModule"

[contract.PerpsMarketModule]
artifact = "PerpsMarketModule"

[contract.LiquidationModule]
artifact = "LiquidationModule"

[contract.MarketConfigurationModule]
artifact = "MarketConfigurationModule"

[contract.FeatureFlagModule]
artifact = "contracts/modules/FeatureFlagModule.sol:FeatureFlagModule"

[contract.CoreModule]
artifact = "contracts/modules/CoreModule.sol:CoreModule"

[contract.InitialProxy]
artifact = "contracts/Proxy.sol:Proxy"
args = ["<%= contracts.CoreModule.address %>", "<%= settings.owner %>"]
abiOf = ["CoreModule"]
salt = "<%= settings.salt %>"

[contract.GlobalPerpsMarketModule]
artifact = "GlobalPerpsMarketModule"

# Core
[router.PerpsMarketRouter]
contracts = [
    "synthetix.AccountModule",
    "synthetix.AssociatedSystemsModule",
    "synthetix.MulticallModule",
    "CoreModule",
    "PerpsMarketFactoryModule",
    "PerpsAccountModule",
    "PerpsMarketModule",
    "AsyncOrderModule",
    "AsyncOrderSettlementEIP3668Module",
    "AsyncOrderSettlementPythModule",
    "AsyncOrderCancelModule",
    "FeatureFlagModule",
    "LiquidationModule",
    "MarketConfigurationModule",
    "GlobalPerpsMarketModule"
]

[invoke.upgrade_proxy]
target = ["InitialProxy"]
fromCall.func = "owner"
func = "upgradeTo"
args = ["<%= contracts.PerpsMarketRouter.address %>"]
factory.PerpsMarketProxy.abiOf = ["PerpsMarketRouter"]
factory.PerpsMarketProxy.event = "Upgraded"
factory.PerpsMarketProxy.arg = 0

[invoke.init_account]
target = ["PerpsMarketProxy"]
from = "<%= settings.owner %>"
func = "initOrUpgradeNft"
args = [
    "<%= formatBytes32String('accountNft') %>",
    "Perpetual Futures Account",
    "snxPerpsAcct",
    "",
    "<%= imports.synthetix.contracts.AccountRouter.address %>"
]
depends = ["invoke.upgrade_proxy"]
factory.PerpsAccountProxy.abiOf = ["synthetix.AccountRouter"]
factory.PerpsAccountProxy.event = "AssociatedSystemSet"
factory.PerpsAccountProxy.arg = 2

# add pool owner to feature flag allow list
[invoke.addPerpsMarketToFeatureFlag]
target = ["synthetix.CoreProxy"]
func = "addToFeatureFlagAllowlist"
from = "<%= settings.coreProxyOwner %>"
args = [
    "<%= formatBytes32String('registerMarket') %>",
    "<%= contracts.PerpsMarketProxy.address %>"
]

[invoke.addCreateMarketToFeatureFlag]
target = ["PerpsMarketProxy"]
func = "addToFeatureFlagAllowlist"
from = "<%= settings.owner %>"
args = ["<%= formatBytes32String('createMarket') %>", "<%= settings.owner %>"]

[invoke.initializeFactory]
target = ["PerpsMarketProxy"]
func = "initializeFactory"
args = [
    "<%= imports.synthetix.contracts.CoreProxy.address %>",
    "<%= imports.spotMarket.contracts.SpotMarketProxy.address %>"
]
from = "<%= settings.owner %>"
extra.superMarketId.event = "FactoryInitialized"
extra.superMarketId.arg = 0

[invoke.enableBasicFeatures]
target = ["PerpsMarketProxy"]
fromCall.func = "owner"
func = "multicall"
args = [
    [
        # for all the below functions, "0x7d632bd2" is the selector for "setFeatureFlagAllowAll(bytes32,bool)"
        "0x7d632bd2<%= defaultAbiCoder.encode(['bytes32', 'bool'], [formatBytes32String('createAccount'), true]).slice(2) %>",
    ]
]
depends = ["invoke.upgrade_proxy"]
