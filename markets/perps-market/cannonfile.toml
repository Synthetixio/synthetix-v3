name = "synthetix-perps-market"
version = "<%= package.version %>"
description = "Perps market implementation"

[var.main]
coreProxyOwner = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"
owner = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"
synthetixPackage = "synthetix:latest"
spotMarketPackage = "synthetix-spot-market:latest"
synthetixPreset = "main"
spotMarketPreset = "main"
salt = "snax"

[pull.synthetix]
source = "<%= settings.synthetixPackage %>"
preset = "<%= settings.synthetixPreset %>"

[pull.spotMarket]
source = "<%= settings.spotMarketPackage %>"
preset = "<%= settings.spotMarketPreset %>"

[deploy.PerpsMarketFactoryModule]
artifact = "PerpsMarketFactoryModule"

[deploy.AsyncOrderModule]
artifact = "AsyncOrderModule"

[deploy.AsyncOrderSettlementPythModule]
artifact = "AsyncOrderSettlementPythModule"

[deploy.AsyncOrderCancelModule]
artifact = "AsyncOrderCancelModule"

[deploy.PerpsAccountModule]
artifact = "PerpsAccountModule"

[deploy.PerpsMarketModule]
artifact = "PerpsMarketModule"

[deploy.LiquidationModule]
artifact = "LiquidationModule"

[deploy.MarketConfigurationModule]
artifact = "MarketConfigurationModule"

[deploy.FeatureFlagModule]
artifact = "contracts/modules/FeatureFlagModule.sol:FeatureFlagModule"

[deploy.CoreModule]
artifact = "contracts/modules/CoreModule.sol:CoreModule"

[deploy.InitialProxy]
artifact = "contracts/Proxy.sol:Proxy"
args = ["<%= contracts.CoreModule.address %>", "<%= settings.owner %>"]
abiOf = ["CoreModule"]
salt = "<%= settings.salt %>"

[deploy.GlobalPerpsMarketModule]
artifact = "GlobalPerpsMarketModule"

# Core
[router.PerpsMarketRouter]
contracts = [
    "synthetix.AccountModule",
    "synthetix.AssociatedSystemsModule",
    "CoreModule",
    "PerpsMarketFactoryModule",
    "PerpsAccountModule",
    "PerpsMarketModule",
    "AsyncOrderModule",
    "AsyncOrderSettlementPythModule",
    "AsyncOrderCancelModule",
    "FeatureFlagModule",
    "LiquidationModule",
    "MarketConfigurationModule",
    "GlobalPerpsMarketModule",
]

[invoke.upgrade_proxy]
target = ["InitialProxy"]
fromCall.func = "owner"
func = "upgradeTo"
args = ["<%= contracts.PerpsMarketRouter.address %>"]
factory.PerpsMarketProxy.abiOf = ["PerpsMarketRouter"]
factory.PerpsMarketProxy.event = "Upgraded"
factory.PerpsMarketProxy.arg = 0
factory.PerpsMarketProxy.highlight = true

[invoke.init_account]
target = ["PerpsMarketProxy"]
fromCall.func = "owner"
func = "initOrUpgradeNft"
args = [
    "<%= formatBytes32String('accountNft') %>",
    "Perpetual Futures Account",
    "snxPerpsAcct",
    "",
    "<%= imports.synthetix.contracts.AccountRouter.address %>",
]
depends = ["invoke.upgrade_proxy"]
factory.PerpsAccountProxy.abiOf = ["synthetix.AccountRouter"]
factory.PerpsAccountProxy.event = "AssociatedSystemSet"
factory.PerpsAccountProxy.arg = 2
factory.PerpsAccountProxy.highlight = true

# add pool owner to feature flag allow list
[invoke.addPerpsMarketToFeatureFlag]
target = ["synthetix.CoreProxy"]
func = "addToFeatureFlagAllowlist"
fromCall.func = "owner"
args = [
    "<%= formatBytes32String('registerMarket') %>",
    "<%= contracts.PerpsMarketProxy.address %>",
]

[invoke.addCreateMarketToFeatureFlag]
target = ["PerpsMarketProxy"]
func = "addToFeatureFlagAllowlist"
fromCall.func = "owner"
args = ["<%= formatBytes32String('createMarket') %>", "<%= settings.owner %>"]

[invoke.initializeFactory]
target = ["PerpsMarketProxy"]
func = "initializeFactory"
args = [
    "<%= imports.synthetix.contracts.CoreProxy.address %>",
    "<%= imports.spotMarket.contracts.SpotMarketProxy.address %>",
]
fromCall.func = "owner"
var.superMarketId.event = "FactoryInitialized"
var.superMarketId.arg = 0

[invoke.enableFeatureCreateAccount]
target = ["PerpsMarketProxy"]
fromCall.func = "owner"
func = "setFeatureFlagAllowAll"
args = ["<%= formatBytes32String('createAccount') %>", true]
