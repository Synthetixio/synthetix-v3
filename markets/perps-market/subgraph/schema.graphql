type Account @entity {
  id: ID!
  accountId: BigInt!
  owner: String!
}

type Market @entity {
  id: ID!
  perpsMarketId: BigInt!
  marketOwner: String
  marketName: String
  marketSymbol: String
  feedId: Bytes
  owner: String
  maxFundingVelocity: BigInt
  skewScale: BigInt
  initialMarginFraction: BigInt
  maintenanceMarginFraction: BigInt
  liquidationRewardRatioD18: BigInt
  maxLiquidationLimitAccumulationMultiplier: BigInt
  lockedOiPercent: BigInt
  makerFee: BigInt
  takerFee: BigInt
}

type Order @entity {
  id: ID!
  marketId: BigInt
  accountId: BigInt
  amountProvided: BigInt
  orderType: Int
  size: BigInt!
  acceptablePrice: BigInt
  settlementTime: BigInt
  expirationTime: BigInt
  trackingCode: Bytes
  owner: String

  fillPrice: BigInt
  accountPnlRealized: BigInt
  newSize: BigInt!
  collectedFees: BigInt
  settelementReward: BigInt
  settler: String

  block: BigInt!
  timestamp: BigInt!
}

type SettlementStrategy @entity {
  id: ID!
  strategyId: BigInt!
  marketId: BigInt!
  settlementStrategyId: BigInt!
  enabled: Boolean!
  strategyType: Int
  settlementDelay: BigInt
  settlementWindowDuration: BigInt
  priceVerificationContract: String
  feedId: Bytes
  url: String
  settlementReward: BigInt
  priceDeviationTolerance: BigInt
  minimumUsdExchangeAmount: BigInt
  maxRoundingLoss: BigInt
}
