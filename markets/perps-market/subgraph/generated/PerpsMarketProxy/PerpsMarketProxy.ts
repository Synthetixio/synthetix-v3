// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from '@graphprotocol/graph-ts';

export class AccountCreated extends ethereum.Event {
  get params(): AccountCreated__Params {
    return new AccountCreated__Params(this);
  }
}

export class AccountCreated__Params {
  _event: AccountCreated;

  constructor(event: AccountCreated) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PermissionGranted extends ethereum.Event {
  get params(): PermissionGranted__Params {
    return new PermissionGranted__Params(this);
  }
}

export class PermissionGranted__Params {
  _event: PermissionGranted;

  constructor(event: PermissionGranted) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get permission(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class PermissionRevoked extends ethereum.Event {
  get params(): PermissionRevoked__Params {
    return new PermissionRevoked__Params(this);
  }
}

export class PermissionRevoked__Params {
  _event: PermissionRevoked;

  constructor(event: PermissionRevoked) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get permission(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class AssociatedSystemSet extends ethereum.Event {
  get params(): AssociatedSystemSet__Params {
    return new AssociatedSystemSet__Params(this);
  }
}

export class AssociatedSystemSet__Params {
  _event: AssociatedSystemSet;

  constructor(event: AssociatedSystemSet) {
    this._event = event;
  }

  get kind(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get id(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get proxy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get impl(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class OwnerChanged extends ethereum.Event {
  get params(): OwnerChanged__Params {
    return new OwnerChanged__Params(this);
  }
}

export class OwnerChanged__Params {
  _event: OwnerChanged;

  constructor(event: OwnerChanged) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerNominated extends ethereum.Event {
  get params(): OwnerNominated__Params {
    return new OwnerNominated__Params(this);
  }
}

export class OwnerNominated__Params {
  _event: OwnerNominated;

  constructor(event: OwnerNominated) {
    this._event = event;
  }

  get newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get self(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get implementation(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MarketOwnerChanged extends ethereum.Event {
  get params(): MarketOwnerChanged__Params {
    return new MarketOwnerChanged__Params(this);
  }
}

export class MarketOwnerChanged__Params {
  _event: MarketOwnerChanged;

  constructor(event: MarketOwnerChanged) {
    this._event = event;
  }

  get perpsMarketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class MarketOwnerNominated extends ethereum.Event {
  get params(): MarketOwnerNominated__Params {
    return new MarketOwnerNominated__Params(this);
  }
}

export class MarketOwnerNominated__Params {
  _event: MarketOwnerNominated;

  constructor(event: MarketOwnerNominated) {
    this._event = event;
  }

  get perpsMarketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newNominatedOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MarketPriceDataUpdated extends ethereum.Event {
  get params(): MarketPriceDataUpdated__Params {
    return new MarketPriceDataUpdated__Params(this);
  }
}

export class MarketPriceDataUpdated__Params {
  _event: MarketPriceDataUpdated;

  constructor(event: MarketPriceDataUpdated) {
    this._event = event;
  }

  get perpsMarketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get feedId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class MarketRegistered extends ethereum.Event {
  get params(): MarketRegistered__Params {
    return new MarketRegistered__Params(this);
  }
}

export class MarketRegistered__Params {
  _event: MarketRegistered;

  constructor(event: MarketRegistered) {
    this._event = event;
  }

  get perpsMarketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get marketOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get marketName(): string {
    return this._event.parameters[2].value.toString();
  }

  get marketSymbol(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class CollateralModified extends ethereum.Event {
  get params(): CollateralModified__Params {
    return new CollateralModified__Params(this);
  }
}

export class CollateralModified__Params {
  _event: CollateralModified;

  constructor(event: CollateralModified) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get synthMarketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amountDelta(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class OrderCanceled extends ethereum.Event {
  get params(): OrderCanceled__Params {
    return new OrderCanceled__Params(this);
  }
}

export class OrderCanceled__Params {
  _event: OrderCanceled;

  constructor(event: OrderCanceled) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get accountId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get settlementTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get acceptablePrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OrderCommitted extends ethereum.Event {
  get params(): OrderCommitted__Params {
    return new OrderCommitted__Params(this);
  }
}

export class OrderCommitted__Params {
  _event: OrderCommitted;

  constructor(event: OrderCommitted) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get accountId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get orderType(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get acceptablePrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get settlementTime(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get expirationTime(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }

  get sender(): Address {
    return this._event.parameters[8].value.toAddress();
  }
}

export class MarketUpdated extends ethereum.Event {
  get params(): MarketUpdated__Params {
    return new MarketUpdated__Params(this);
  }
}

export class MarketUpdated__Params {
  _event: MarketUpdated;

  constructor(event: MarketUpdated) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get skew(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get size(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get currentFundingRate(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get currentFundingVelocity(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class OrderSettled extends ethereum.Event {
  get params(): OrderSettled__Params {
    return new OrderSettled__Params(this);
  }
}

export class OrderSettled__Params {
  _event: OrderSettled;

  constructor(event: OrderSettled) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get accountId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get fillPrice(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newSize(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get collectedFees(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get settlementReward(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get trackingCode(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }

  get settler(): Address {
    return this._event.parameters[8].value.toAddress();
  }
}

export class FeatureFlagAllowAllSet extends ethereum.Event {
  get params(): FeatureFlagAllowAllSet__Params {
    return new FeatureFlagAllowAllSet__Params(this);
  }
}

export class FeatureFlagAllowAllSet__Params {
  _event: FeatureFlagAllowAllSet;

  constructor(event: FeatureFlagAllowAllSet) {
    this._event = event;
  }

  get feature(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get allowAll(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class FeatureFlagAllowlistAdded extends ethereum.Event {
  get params(): FeatureFlagAllowlistAdded__Params {
    return new FeatureFlagAllowlistAdded__Params(this);
  }
}

export class FeatureFlagAllowlistAdded__Params {
  _event: FeatureFlagAllowlistAdded;

  constructor(event: FeatureFlagAllowlistAdded) {
    this._event = event;
  }

  get feature(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeatureFlagAllowlistRemoved extends ethereum.Event {
  get params(): FeatureFlagAllowlistRemoved__Params {
    return new FeatureFlagAllowlistRemoved__Params(this);
  }
}

export class FeatureFlagAllowlistRemoved__Params {
  _event: FeatureFlagAllowlistRemoved;

  constructor(event: FeatureFlagAllowlistRemoved) {
    this._event = event;
  }

  get feature(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeatureFlagDeniersReset extends ethereum.Event {
  get params(): FeatureFlagDeniersReset__Params {
    return new FeatureFlagDeniersReset__Params(this);
  }
}

export class FeatureFlagDeniersReset__Params {
  _event: FeatureFlagDeniersReset;

  constructor(event: FeatureFlagDeniersReset) {
    this._event = event;
  }

  get feature(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get deniers(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }
}

export class FeatureFlagDenyAllSet extends ethereum.Event {
  get params(): FeatureFlagDenyAllSet__Params {
    return new FeatureFlagDenyAllSet__Params(this);
  }
}

export class FeatureFlagDenyAllSet__Params {
  _event: FeatureFlagDenyAllSet;

  constructor(event: FeatureFlagDenyAllSet) {
    this._event = event;
  }

  get feature(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get denyAll(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class FundingParametersSet extends ethereum.Event {
  get params(): FundingParametersSet__Params {
    return new FundingParametersSet__Params(this);
  }
}

export class FundingParametersSet__Params {
  _event: FundingParametersSet;

  constructor(event: FundingParametersSet) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get skewScale(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get maxFundingVelocity(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LiquidationParametersSet extends ethereum.Event {
  get params(): LiquidationParametersSet__Params {
    return new LiquidationParametersSet__Params(this);
  }
}

export class LiquidationParametersSet__Params {
  _event: LiquidationParametersSet;

  constructor(event: LiquidationParametersSet) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get initialMarginRatioD18(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get maintenanceMarginRatioD18(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get liquidationRewardRatioD18(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get maxLiquidationLimitAccumulationMultiplier(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get maxSecondsInLiquidationWindow(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get minimumPositionMargin(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class LockedOiRatioD18Set extends ethereum.Event {
  get params(): LockedOiRatioD18Set__Params {
    return new LockedOiRatioD18Set__Params(this);
  }
}

export class LockedOiRatioD18Set__Params {
  _event: LockedOiRatioD18Set;

  constructor(event: LockedOiRatioD18Set) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lockedOiRatioD18(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MaxMarketSizeSet extends ethereum.Event {
  get params(): MaxMarketSizeSet__Params {
    return new MaxMarketSizeSet__Params(this);
  }
}

export class MaxMarketSizeSet__Params {
  _event: MaxMarketSizeSet;

  constructor(event: MaxMarketSizeSet) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get maxMarketSize(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OrderFeesSet extends ethereum.Event {
  get params(): OrderFeesSet__Params {
    return new OrderFeesSet__Params(this);
  }
}

export class OrderFeesSet__Params {
  _event: OrderFeesSet;

  constructor(event: OrderFeesSet) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get makerFeeRatio(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get takerFeeRatio(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SettlementStrategyAdded extends ethereum.Event {
  get params(): SettlementStrategyAdded__Params {
    return new SettlementStrategyAdded__Params(this);
  }
}

export class SettlementStrategyAdded__Params {
  _event: SettlementStrategyAdded;

  constructor(event: SettlementStrategyAdded) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get strategy(): SettlementStrategyAddedStrategyStruct {
    return changetype<SettlementStrategyAddedStrategyStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }

  get strategyId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SettlementStrategyAddedStrategyStruct extends ethereum.Tuple {
  get strategyType(): i32 {
    return this[0].toI32();
  }

  get settlementDelay(): BigInt {
    return this[1].toBigInt();
  }

  get settlementWindowDuration(): BigInt {
    return this[2].toBigInt();
  }

  get priceWindowDuration(): BigInt {
    return this[3].toBigInt();
  }

  get priceVerificationContract(): Address {
    return this[4].toAddress();
  }

  get feedId(): Bytes {
    return this[5].toBytes();
  }

  get url(): string {
    return this[6].toString();
  }

  get settlementReward(): BigInt {
    return this[7].toBigInt();
  }

  get priceDeviationTolerance(): BigInt {
    return this[8].toBigInt();
  }

  get disabled(): boolean {
    return this[9].toBoolean();
  }
}

export class SettlementStrategyEnabled extends ethereum.Event {
  get params(): SettlementStrategyEnabled__Params {
    return new SettlementStrategyEnabled__Params(this);
  }
}

export class SettlementStrategyEnabled__Params {
  _event: SettlementStrategyEnabled;

  constructor(event: SettlementStrategyEnabled) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get strategyId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get enabled(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class LiquidationRewardGuardsSet extends ethereum.Event {
  get params(): LiquidationRewardGuardsSet__Params {
    return new LiquidationRewardGuardsSet__Params(this);
  }
}

export class LiquidationRewardGuardsSet__Params {
  _event: LiquidationRewardGuardsSet;

  constructor(event: LiquidationRewardGuardsSet) {
    this._event = event;
  }

  get minLiquidationRewardUsd(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get maxLiquidationRewardUsd(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MaxCollateralAmountSet extends ethereum.Event {
  get params(): MaxCollateralAmountSet__Params {
    return new MaxCollateralAmountSet__Params(this);
  }
}

export class MaxCollateralAmountSet__Params {
  _event: MaxCollateralAmountSet;

  constructor(event: MaxCollateralAmountSet) {
    this._event = event;
  }

  get synthMarketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get collateralAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SynthDeductionPrioritySet extends ethereum.Event {
  get params(): SynthDeductionPrioritySet__Params {
    return new SynthDeductionPrioritySet__Params(this);
  }
}

export class SynthDeductionPrioritySet__Params {
  _event: SynthDeductionPrioritySet;

  constructor(event: SynthDeductionPrioritySet) {
    this._event = event;
  }

  get newSynthDeductionPriority(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }
}

export class PerpsMarketProxy__getAccountPermissionsResultAccountPermsStruct extends ethereum.Tuple {
  get user(): Address {
    return this[0].toAddress();
  }

  get permissions(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class PerpsMarketProxy__getAssociatedSystemResult {
  value0: Address;
  value1: Bytes;

  constructor(value0: Address, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set('value0', ethereum.Value.fromAddress(this.value0));
    map.set('value1', ethereum.Value.fromFixedBytes(this.value1));
    return map;
  }

  getAddr(): Address {
    return this.value0;
  }

  getKind(): Bytes {
    return this.value1;
  }
}

export class PerpsMarketProxy__getOpenPositionResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set('value0', ethereum.Value.fromSignedBigInt(this.value0));
    map.set('value1', ethereum.Value.fromSignedBigInt(this.value1));
    map.set('value2', ethereum.Value.fromSignedBigInt(this.value2));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }
}

export class PerpsMarketProxy__getMarketSummaryResultSummaryStruct extends ethereum.Tuple {
  get skew(): BigInt {
    return this[0].toBigInt();
  }

  get size(): BigInt {
    return this[1].toBigInt();
  }

  get maxOpenInterest(): BigInt {
    return this[2].toBigInt();
  }

  get currentFundingRate(): BigInt {
    return this[3].toBigInt();
  }

  get currentFundingVelocity(): BigInt {
    return this[4].toBigInt();
  }

  get indexPrice(): BigInt {
    return this[5].toBigInt();
  }
}

export class PerpsMarketProxy__commitOrderResultRetOrderStruct extends ethereum.Tuple {
  get accountId(): BigInt {
    return this[0].toBigInt();
  }

  get marketId(): BigInt {
    return this[1].toBigInt();
  }

  get sizeDelta(): BigInt {
    return this[2].toBigInt();
  }

  get settlementStrategyId(): BigInt {
    return this[3].toBigInt();
  }

  get settlementTime(): BigInt {
    return this[4].toBigInt();
  }

  get acceptablePrice(): BigInt {
    return this[5].toBigInt();
  }

  get trackingCode(): Bytes {
    return this[6].toBytes();
  }
}

export class PerpsMarketProxy__commitOrderResult {
  value0: PerpsMarketProxy__commitOrderResultRetOrderStruct;
  value1: BigInt;

  constructor(value0: PerpsMarketProxy__commitOrderResultRetOrderStruct, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set('value0', ethereum.Value.fromTuple(this.value0));
    map.set('value1', ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getRetOrder(): PerpsMarketProxy__commitOrderResultRetOrderStruct {
    return this.value0;
  }

  getFees(): BigInt {
    return this.value1;
  }
}

export class PerpsMarketProxy__commitOrderInputCommitmentStruct extends ethereum.Tuple {
  get marketId(): BigInt {
    return this[0].toBigInt();
  }

  get accountId(): BigInt {
    return this[1].toBigInt();
  }

  get sizeDelta(): BigInt {
    return this[2].toBigInt();
  }

  get settlementStrategyId(): BigInt {
    return this[3].toBigInt();
  }

  get acceptablePrice(): BigInt {
    return this[4].toBigInt();
  }

  get trackingCode(): Bytes {
    return this[5].toBytes();
  }
}

export class PerpsMarketProxy__getOrderResultValue0Struct extends ethereum.Tuple {
  get accountId(): BigInt {
    return this[0].toBigInt();
  }

  get marketId(): BigInt {
    return this[1].toBigInt();
  }

  get sizeDelta(): BigInt {
    return this[2].toBigInt();
  }

  get settlementStrategyId(): BigInt {
    return this[3].toBigInt();
  }

  get settlementTime(): BigInt {
    return this[4].toBigInt();
  }

  get acceptablePrice(): BigInt {
    return this[5].toBigInt();
  }

  get trackingCode(): Bytes {
    return this[6].toBytes();
  }
}

export class PerpsMarketProxy__addSettlementStrategyInputStrategyStruct extends ethereum.Tuple {
  get strategyType(): i32 {
    return this[0].toI32();
  }

  get settlementDelay(): BigInt {
    return this[1].toBigInt();
  }

  get settlementWindowDuration(): BigInt {
    return this[2].toBigInt();
  }

  get priceWindowDuration(): BigInt {
    return this[3].toBigInt();
  }

  get priceVerificationContract(): Address {
    return this[4].toAddress();
  }

  get feedId(): Bytes {
    return this[5].toBytes();
  }

  get url(): string {
    return this[6].toString();
  }

  get settlementReward(): BigInt {
    return this[7].toBigInt();
  }

  get priceDeviationTolerance(): BigInt {
    return this[8].toBigInt();
  }

  get disabled(): boolean {
    return this[9].toBoolean();
  }
}

export class PerpsMarketProxy__getFundingParametersResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set('value0', ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set('value1', ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getSkewScale(): BigInt {
    return this.value0;
  }

  getMaxFundingVelocity(): BigInt {
    return this.value1;
  }
}

export class PerpsMarketProxy__getLiquidationParametersResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt, value4: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set('value0', ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set('value1', ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set('value2', ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set('value3', ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set('value4', ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getInitialMarginRatioD18(): BigInt {
    return this.value0;
  }

  getMaintenanceMarginRatioD18(): BigInt {
    return this.value1;
  }

  getLiquidationRewardRatioD18(): BigInt {
    return this.value2;
  }

  getMaxLiquidationLimitAccumulationMultiplier(): BigInt {
    return this.value3;
  }

  getMaxSecondsInLiquidationWindow(): BigInt {
    return this.value4;
  }
}

export class PerpsMarketProxy__getOrderFeesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set('value0', ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set('value1', ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getMakerFee(): BigInt {
    return this.value0;
  }

  getTakerFee(): BigInt {
    return this.value1;
  }
}

export class PerpsMarketProxy__getSettlementStrategyResultSettlementStrategyStruct extends ethereum.Tuple {
  get strategyType(): i32 {
    return this[0].toI32();
  }

  get settlementDelay(): BigInt {
    return this[1].toBigInt();
  }

  get settlementWindowDuration(): BigInt {
    return this[2].toBigInt();
  }

  get priceWindowDuration(): BigInt {
    return this[3].toBigInt();
  }

  get priceVerificationContract(): Address {
    return this[4].toAddress();
  }

  get feedId(): Bytes {
    return this[5].toBytes();
  }

  get url(): string {
    return this[6].toString();
  }

  get settlementReward(): BigInt {
    return this[7].toBigInt();
  }

  get priceDeviationTolerance(): BigInt {
    return this[8].toBigInt();
  }

  get disabled(): boolean {
    return this[9].toBoolean();
  }
}

export class PerpsMarketProxy__getLiquidationRewardGuardsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set('value0', ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set('value1', ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getMinLiquidationRewardUsd(): BigInt {
    return this.value0;
  }

  getMaxLiquidationRewardUsd(): BigInt {
    return this.value1;
  }
}

export class PerpsMarketProxy extends ethereum.SmartContract {
  static bind(address: Address): PerpsMarketProxy {
    return new PerpsMarketProxy('PerpsMarketProxy', address);
  }

  createAccount(): BigInt {
    let result = super.call('createAccount', 'createAccount():(uint128)', []);

    return result[0].toBigInt();
  }

  try_createAccount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall('createAccount', 'createAccount():(uint128)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAccountLastInteraction(accountId: BigInt): BigInt {
    let result = super.call(
      'getAccountLastInteraction',
      'getAccountLastInteraction(uint128):(uint256)',
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );

    return result[0].toBigInt();
  }

  try_getAccountLastInteraction(accountId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      'getAccountLastInteraction',
      'getAccountLastInteraction(uint128):(uint256)',
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAccountOwner(accountId: BigInt): Address {
    let result = super.call('getAccountOwner', 'getAccountOwner(uint128):(address)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
    ]);

    return result[0].toAddress();
  }

  try_getAccountOwner(accountId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall('getAccountOwner', 'getAccountOwner(uint128):(address)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAccountPermissions(
    accountId: BigInt
  ): Array<PerpsMarketProxy__getAccountPermissionsResultAccountPermsStruct> {
    let result = super.call(
      'getAccountPermissions',
      'getAccountPermissions(uint128):((address,bytes32[])[])',
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );

    return result[0].toTupleArray<PerpsMarketProxy__getAccountPermissionsResultAccountPermsStruct>();
  }

  try_getAccountPermissions(
    accountId: BigInt
  ): ethereum.CallResult<Array<PerpsMarketProxy__getAccountPermissionsResultAccountPermsStruct>> {
    let result = super.tryCall(
      'getAccountPermissions',
      'getAccountPermissions(uint128):((address,bytes32[])[])',
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<PerpsMarketProxy__getAccountPermissionsResultAccountPermsStruct>()
    );
  }

  getAccountTokenAddress(): Address {
    let result = super.call('getAccountTokenAddress', 'getAccountTokenAddress():(address)', []);

    return result[0].toAddress();
  }

  try_getAccountTokenAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall('getAccountTokenAddress', 'getAccountTokenAddress():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hasPermission(accountId: BigInt, permission: Bytes, user: Address): boolean {
    let result = super.call('hasPermission', 'hasPermission(uint128,bytes32,address):(bool)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
      ethereum.Value.fromFixedBytes(permission),
      ethereum.Value.fromAddress(user),
    ]);

    return result[0].toBoolean();
  }

  try_hasPermission(
    accountId: BigInt,
    permission: Bytes,
    user: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall('hasPermission', 'hasPermission(uint128,bytes32,address):(bool)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
      ethereum.Value.fromFixedBytes(permission),
      ethereum.Value.fromAddress(user),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAuthorized(accountId: BigInt, permission: Bytes, user: Address): boolean {
    let result = super.call('isAuthorized', 'isAuthorized(uint128,bytes32,address):(bool)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
      ethereum.Value.fromFixedBytes(permission),
      ethereum.Value.fromAddress(user),
    ]);

    return result[0].toBoolean();
  }

  try_isAuthorized(
    accountId: BigInt,
    permission: Bytes,
    user: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall('isAuthorized', 'isAuthorized(uint128,bytes32,address):(bool)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
      ethereum.Value.fromFixedBytes(permission),
      ethereum.Value.fromAddress(user),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getAssociatedSystem(id: Bytes): PerpsMarketProxy__getAssociatedSystemResult {
    let result = super.call(
      'getAssociatedSystem',
      'getAssociatedSystem(bytes32):(address,bytes32)',
      [ethereum.Value.fromFixedBytes(id)]
    );

    return new PerpsMarketProxy__getAssociatedSystemResult(
      result[0].toAddress(),
      result[1].toBytes()
    );
  }

  try_getAssociatedSystem(
    id: Bytes
  ): ethereum.CallResult<PerpsMarketProxy__getAssociatedSystemResult> {
    let result = super.tryCall(
      'getAssociatedSystem',
      'getAssociatedSystem(bytes32):(address,bytes32)',
      [ethereum.Value.fromFixedBytes(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsMarketProxy__getAssociatedSystemResult(value[0].toAddress(), value[1].toBytes())
    );
  }

  getImplementation(): Address {
    let result = super.call('getImplementation', 'getImplementation():(address)', []);

    return result[0].toAddress();
  }

  try_getImplementation(): ethereum.CallResult<Address> {
    let result = super.tryCall('getImplementation', 'getImplementation():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nominatedOwner(): Address {
    let result = super.call('nominatedOwner', 'nominatedOwner():(address)', []);

    return result[0].toAddress();
  }

  try_nominatedOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall('nominatedOwner', 'nominatedOwner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call('owner', 'owner():(address)', []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall('owner', 'owner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createMarket(marketName: string, marketSymbol: string, marketOwner: Address): BigInt {
    let result = super.call('createMarket', 'createMarket(string,string,address):(uint128)', [
      ethereum.Value.fromString(marketName),
      ethereum.Value.fromString(marketSymbol),
      ethereum.Value.fromAddress(marketOwner),
    ]);

    return result[0].toBigInt();
  }

  try_createMarket(
    marketName: string,
    marketSymbol: string,
    marketOwner: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall('createMarket', 'createMarket(string,string,address):(uint128)', [
      ethereum.Value.fromString(marketName),
      ethereum.Value.fromString(marketSymbol),
      ethereum.Value.fromAddress(marketOwner),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMarketOwner(perpsMarketId: BigInt): Address {
    let result = super.call('getMarketOwner', 'getMarketOwner(uint128):(address)', [
      ethereum.Value.fromUnsignedBigInt(perpsMarketId),
    ]);

    return result[0].toAddress();
  }

  try_getMarketOwner(perpsMarketId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall('getMarketOwner', 'getMarketOwner(uint128):(address)', [
      ethereum.Value.fromUnsignedBigInt(perpsMarketId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  minimumCredit(perpsMarketId: BigInt): BigInt {
    let result = super.call('minimumCredit', 'minimumCredit(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(perpsMarketId),
    ]);

    return result[0].toBigInt();
  }

  try_minimumCredit(perpsMarketId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall('minimumCredit', 'minimumCredit(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(perpsMarketId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(perpsMarketId: BigInt): string {
    let result = super.call('name', 'name(uint128):(string)', [
      ethereum.Value.fromUnsignedBigInt(perpsMarketId),
    ]);

    return result[0].toString();
  }

  try_name(perpsMarketId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall('name', 'name(uint128):(string)', [
      ethereum.Value.fromUnsignedBigInt(perpsMarketId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  reportedDebt(perpsMarketId: BigInt): BigInt {
    let result = super.call('reportedDebt', 'reportedDebt(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(perpsMarketId),
    ]);

    return result[0].toBigInt();
  }

  try_reportedDebt(perpsMarketId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall('reportedDebt', 'reportedDebt(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(perpsMarketId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call('supportsInterface', 'supportsInterface(bytes4):(bool)', [
      ethereum.Value.fromFixedBytes(interfaceId),
    ]);

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall('supportsInterface', 'supportsInterface(bytes4):(bool)', [
      ethereum.Value.fromFixedBytes(interfaceId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(perpsMarketId: BigInt): string {
    let result = super.call('symbol', 'symbol(uint128):(string)', [
      ethereum.Value.fromUnsignedBigInt(perpsMarketId),
    ]);

    return result[0].toString();
  }

  try_symbol(perpsMarketId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall('symbol', 'symbol(uint128):(string)', [
      ethereum.Value.fromUnsignedBigInt(perpsMarketId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getAvailableMargin(accountId: BigInt): BigInt {
    let result = super.call('getAvailableMargin', 'getAvailableMargin(uint128):(int256)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
    ]);

    return result[0].toBigInt();
  }

  try_getAvailableMargin(accountId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall('getAvailableMargin', 'getAvailableMargin(uint128):(int256)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCollateralAmount(accountId: BigInt, synthMarketId: BigInt): BigInt {
    let result = super.call(
      'getCollateralAmount',
      'getCollateralAmount(uint128,uint128):(uint256)',
      [
        ethereum.Value.fromUnsignedBigInt(accountId),
        ethereum.Value.fromUnsignedBigInt(synthMarketId),
      ]
    );

    return result[0].toBigInt();
  }

  try_getCollateralAmount(accountId: BigInt, synthMarketId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      'getCollateralAmount',
      'getCollateralAmount(uint128,uint128):(uint256)',
      [
        ethereum.Value.fromUnsignedBigInt(accountId),
        ethereum.Value.fromUnsignedBigInt(synthMarketId),
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOpenPosition(accountId: BigInt, marketId: BigInt): PerpsMarketProxy__getOpenPositionResult {
    let result = super.call(
      'getOpenPosition',
      'getOpenPosition(uint128,uint128):(int256,int256,int256)',
      [ethereum.Value.fromUnsignedBigInt(accountId), ethereum.Value.fromUnsignedBigInt(marketId)]
    );

    return new PerpsMarketProxy__getOpenPositionResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getOpenPosition(
    accountId: BigInt,
    marketId: BigInt
  ): ethereum.CallResult<PerpsMarketProxy__getOpenPositionResult> {
    let result = super.tryCall(
      'getOpenPosition',
      'getOpenPosition(uint128,uint128):(int256,int256,int256)',
      [ethereum.Value.fromUnsignedBigInt(accountId), ethereum.Value.fromUnsignedBigInt(marketId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsMarketProxy__getOpenPositionResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  totalAccountOpenInterest(accountId: BigInt): BigInt {
    let result = super.call(
      'totalAccountOpenInterest',
      'totalAccountOpenInterest(uint128):(uint256)',
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );

    return result[0].toBigInt();
  }

  try_totalAccountOpenInterest(accountId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      'totalAccountOpenInterest',
      'totalAccountOpenInterest(uint128):(uint256)',
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalCollateralValue(accountId: BigInt): BigInt {
    let result = super.call('totalCollateralValue', 'totalCollateralValue(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
    ]);

    return result[0].toBigInt();
  }

  try_totalCollateralValue(accountId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall('totalCollateralValue', 'totalCollateralValue(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(accountId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentFundingRate(marketId: BigInt): BigInt {
    let result = super.call('currentFundingRate', 'currentFundingRate(uint128):(int256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);

    return result[0].toBigInt();
  }

  try_currentFundingRate(marketId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall('currentFundingRate', 'currentFundingRate(uint128):(int256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentFundingVelocity(marketId: BigInt): BigInt {
    let result = super.call('currentFundingVelocity', 'currentFundingVelocity(uint128):(int256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);

    return result[0].toBigInt();
  }

  try_currentFundingVelocity(marketId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      'currentFundingVelocity',
      'currentFundingVelocity(uint128):(int256)',
      [ethereum.Value.fromUnsignedBigInt(marketId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fillPrice(marketId: BigInt, orderSize: BigInt, price: BigInt): BigInt {
    let result = super.call('fillPrice', 'fillPrice(uint128,int256,uint256):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
      ethereum.Value.fromSignedBigInt(orderSize),
      ethereum.Value.fromUnsignedBigInt(price),
    ]);

    return result[0].toBigInt();
  }

  try_fillPrice(marketId: BigInt, orderSize: BigInt, price: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall('fillPrice', 'fillPrice(uint128,int256,uint256):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
      ethereum.Value.fromSignedBigInt(orderSize),
      ethereum.Value.fromUnsignedBigInt(price),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMarketSummary(marketId: BigInt): PerpsMarketProxy__getMarketSummaryResultSummaryStruct {
    let result = super.call(
      'getMarketSummary',
      'getMarketSummary(uint128):((int256,uint256,uint256,int256,int256,uint256))',
      [ethereum.Value.fromUnsignedBigInt(marketId)]
    );

    return changetype<PerpsMarketProxy__getMarketSummaryResultSummaryStruct>(result[0].toTuple());
  }

  try_getMarketSummary(
    marketId: BigInt
  ): ethereum.CallResult<PerpsMarketProxy__getMarketSummaryResultSummaryStruct> {
    let result = super.tryCall(
      'getMarketSummary',
      'getMarketSummary(uint128):((int256,uint256,uint256,int256,int256,uint256))',
      [ethereum.Value.fromUnsignedBigInt(marketId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PerpsMarketProxy__getMarketSummaryResultSummaryStruct>(value[0].toTuple())
    );
  }

  indexPrice(marketId: BigInt): BigInt {
    let result = super.call('indexPrice', 'indexPrice(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);

    return result[0].toBigInt();
  }

  try_indexPrice(marketId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall('indexPrice', 'indexPrice(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxOpenInterest(marketId: BigInt): BigInt {
    let result = super.call('maxOpenInterest', 'maxOpenInterest(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);

    return result[0].toBigInt();
  }

  try_maxOpenInterest(marketId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall('maxOpenInterest', 'maxOpenInterest(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  size(marketId: BigInt): BigInt {
    let result = super.call('size', 'size(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);

    return result[0].toBigInt();
  }

  try_size(marketId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall('size', 'size(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  skew(marketId: BigInt): BigInt {
    let result = super.call('skew', 'skew(uint128):(int256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);

    return result[0].toBigInt();
  }

  try_skew(marketId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall('skew', 'skew(uint128):(int256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  commitOrder(
    commitment: PerpsMarketProxy__commitOrderInputCommitmentStruct
  ): PerpsMarketProxy__commitOrderResult {
    let result = super.call(
      'commitOrder',
      'commitOrder((uint128,uint128,int128,uint128,uint256,bytes32)):((uint128,uint128,int128,uint128,uint256,uint256,bytes32),uint256)',
      [ethereum.Value.fromTuple(commitment)]
    );

    return changetype<PerpsMarketProxy__commitOrderResult>(
      new PerpsMarketProxy__commitOrderResult(
        changetype<PerpsMarketProxy__commitOrderResultRetOrderStruct>(result[0].toTuple()),
        result[1].toBigInt()
      )
    );
  }

  try_commitOrder(
    commitment: PerpsMarketProxy__commitOrderInputCommitmentStruct
  ): ethereum.CallResult<PerpsMarketProxy__commitOrderResult> {
    let result = super.tryCall(
      'commitOrder',
      'commitOrder((uint128,uint128,int128,uint128,uint256,bytes32)):((uint128,uint128,int128,uint128,uint256,uint256,bytes32),uint256)',
      [ethereum.Value.fromTuple(commitment)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PerpsMarketProxy__commitOrderResult>(
        new PerpsMarketProxy__commitOrderResult(
          changetype<PerpsMarketProxy__commitOrderResultRetOrderStruct>(value[0].toTuple()),
          value[1].toBigInt()
        )
      )
    );
  }

  getOrder(marketId: BigInt, accountId: BigInt): PerpsMarketProxy__getOrderResultValue0Struct {
    let result = super.call(
      'getOrder',
      'getOrder(uint128,uint128):((uint128,uint128,int128,uint128,uint256,uint256,bytes32))',
      [ethereum.Value.fromUnsignedBigInt(marketId), ethereum.Value.fromUnsignedBigInt(accountId)]
    );

    return changetype<PerpsMarketProxy__getOrderResultValue0Struct>(result[0].toTuple());
  }

  try_getOrder(
    marketId: BigInt,
    accountId: BigInt
  ): ethereum.CallResult<PerpsMarketProxy__getOrderResultValue0Struct> {
    let result = super.tryCall(
      'getOrder',
      'getOrder(uint128,uint128):((uint128,uint128,int128,uint128,uint256,uint256,bytes32))',
      [ethereum.Value.fromUnsignedBigInt(marketId), ethereum.Value.fromUnsignedBigInt(accountId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PerpsMarketProxy__getOrderResultValue0Struct>(value[0].toTuple())
    );
  }

  PRECISION(): BigInt {
    let result = super.call('PRECISION', 'PRECISION():(int256)', []);

    return result[0].toBigInt();
  }

  try_PRECISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall('PRECISION', 'PRECISION():(int256)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDeniers(feature: Bytes): Array<Address> {
    let result = super.call('getDeniers', 'getDeniers(bytes32):(address[])', [
      ethereum.Value.fromFixedBytes(feature),
    ]);

    return result[0].toAddressArray();
  }

  try_getDeniers(feature: Bytes): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall('getDeniers', 'getDeniers(bytes32):(address[])', [
      ethereum.Value.fromFixedBytes(feature),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getFeatureFlagAllowAll(feature: Bytes): boolean {
    let result = super.call('getFeatureFlagAllowAll', 'getFeatureFlagAllowAll(bytes32):(bool)', [
      ethereum.Value.fromFixedBytes(feature),
    ]);

    return result[0].toBoolean();
  }

  try_getFeatureFlagAllowAll(feature: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall('getFeatureFlagAllowAll', 'getFeatureFlagAllowAll(bytes32):(bool)', [
      ethereum.Value.fromFixedBytes(feature),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getFeatureFlagAllowlist(feature: Bytes): Array<Address> {
    let result = super.call(
      'getFeatureFlagAllowlist',
      'getFeatureFlagAllowlist(bytes32):(address[])',
      [ethereum.Value.fromFixedBytes(feature)]
    );

    return result[0].toAddressArray();
  }

  try_getFeatureFlagAllowlist(feature: Bytes): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      'getFeatureFlagAllowlist',
      'getFeatureFlagAllowlist(bytes32):(address[])',
      [ethereum.Value.fromFixedBytes(feature)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getFeatureFlagDenyAll(feature: Bytes): boolean {
    let result = super.call('getFeatureFlagDenyAll', 'getFeatureFlagDenyAll(bytes32):(bool)', [
      ethereum.Value.fromFixedBytes(feature),
    ]);

    return result[0].toBoolean();
  }

  try_getFeatureFlagDenyAll(feature: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall('getFeatureFlagDenyAll', 'getFeatureFlagDenyAll(bytes32):(bool)', [
      ethereum.Value.fromFixedBytes(feature),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isFeatureAllowed(feature: Bytes, account: Address): boolean {
    let result = super.call('isFeatureAllowed', 'isFeatureAllowed(bytes32,address):(bool)', [
      ethereum.Value.fromFixedBytes(feature),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_isFeatureAllowed(feature: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall('isFeatureAllowed', 'isFeatureAllowed(bytes32,address):(bool)', [
      ethereum.Value.fromFixedBytes(feature),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  addSettlementStrategy(
    marketId: BigInt,
    strategy: PerpsMarketProxy__addSettlementStrategyInputStrategyStruct
  ): BigInt {
    let result = super.call(
      'addSettlementStrategy',
      'addSettlementStrategy(uint128,(uint8,uint256,uint256,uint256,address,bytes32,string,uint256,uint256,bool)):(uint256)',
      [ethereum.Value.fromUnsignedBigInt(marketId), ethereum.Value.fromTuple(strategy)]
    );

    return result[0].toBigInt();
  }

  try_addSettlementStrategy(
    marketId: BigInt,
    strategy: PerpsMarketProxy__addSettlementStrategyInputStrategyStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      'addSettlementStrategy',
      'addSettlementStrategy(uint128,(uint8,uint256,uint256,uint256,address,bytes32,string,uint256,uint256,bool)):(uint256)',
      [ethereum.Value.fromUnsignedBigInt(marketId), ethereum.Value.fromTuple(strategy)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFundingParameters(marketId: BigInt): PerpsMarketProxy__getFundingParametersResult {
    let result = super.call(
      'getFundingParameters',
      'getFundingParameters(uint128):(uint256,uint256)',
      [ethereum.Value.fromUnsignedBigInt(marketId)]
    );

    return new PerpsMarketProxy__getFundingParametersResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getFundingParameters(
    marketId: BigInt
  ): ethereum.CallResult<PerpsMarketProxy__getFundingParametersResult> {
    let result = super.tryCall(
      'getFundingParameters',
      'getFundingParameters(uint128):(uint256,uint256)',
      [ethereum.Value.fromUnsignedBigInt(marketId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsMarketProxy__getFundingParametersResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  getLiquidationParameters(marketId: BigInt): PerpsMarketProxy__getLiquidationParametersResult {
    let result = super.call(
      'getLiquidationParameters',
      'getLiquidationParameters(uint128):(uint256,uint256,uint256,uint256,uint256)',
      [ethereum.Value.fromUnsignedBigInt(marketId)]
    );

    return new PerpsMarketProxy__getLiquidationParametersResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_getLiquidationParameters(
    marketId: BigInt
  ): ethereum.CallResult<PerpsMarketProxy__getLiquidationParametersResult> {
    let result = super.tryCall(
      'getLiquidationParameters',
      'getLiquidationParameters(uint128):(uint256,uint256,uint256,uint256,uint256)',
      [ethereum.Value.fromUnsignedBigInt(marketId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsMarketProxy__getLiquidationParametersResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }

  getLockedOiRatioD18(marketId: BigInt): BigInt {
    let result = super.call('getLockedOiRatioD18', 'getLockedOiRatioD18(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);

    return result[0].toBigInt();
  }

  try_getLockedOiRatioD18(marketId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall('getLockedOiRatioD18', 'getLockedOiRatioD18(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMaxMarketSize(marketId: BigInt): BigInt {
    let result = super.call('getMaxMarketSize', 'getMaxMarketSize(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);

    return result[0].toBigInt();
  }

  try_getMaxMarketSize(marketId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall('getMaxMarketSize', 'getMaxMarketSize(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrderFees(marketId: BigInt): PerpsMarketProxy__getOrderFeesResult {
    let result = super.call('getOrderFees', 'getOrderFees(uint128):(uint256,uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);

    return new PerpsMarketProxy__getOrderFeesResult(result[0].toBigInt(), result[1].toBigInt());
  }

  try_getOrderFees(marketId: BigInt): ethereum.CallResult<PerpsMarketProxy__getOrderFeesResult> {
    let result = super.tryCall('getOrderFees', 'getOrderFees(uint128):(uint256,uint256)', [
      ethereum.Value.fromUnsignedBigInt(marketId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsMarketProxy__getOrderFeesResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  getSettlementStrategy(
    marketId: BigInt,
    strategyId: BigInt
  ): PerpsMarketProxy__getSettlementStrategyResultSettlementStrategyStruct {
    let result = super.call(
      'getSettlementStrategy',
      'getSettlementStrategy(uint128,uint256):((uint8,uint256,uint256,uint256,address,bytes32,string,uint256,uint256,bool))',
      [ethereum.Value.fromUnsignedBigInt(marketId), ethereum.Value.fromUnsignedBigInt(strategyId)]
    );

    return changetype<PerpsMarketProxy__getSettlementStrategyResultSettlementStrategyStruct>(
      result[0].toTuple()
    );
  }

  try_getSettlementStrategy(
    marketId: BigInt,
    strategyId: BigInt
  ): ethereum.CallResult<PerpsMarketProxy__getSettlementStrategyResultSettlementStrategyStruct> {
    let result = super.tryCall(
      'getSettlementStrategy',
      'getSettlementStrategy(uint128,uint256):((uint8,uint256,uint256,uint256,address,bytes32,string,uint256,uint256,bool))',
      [ethereum.Value.fromUnsignedBigInt(marketId), ethereum.Value.fromUnsignedBigInt(strategyId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PerpsMarketProxy__getSettlementStrategyResultSettlementStrategyStruct>(
        value[0].toTuple()
      )
    );
  }

  getLiquidationRewardGuards(): PerpsMarketProxy__getLiquidationRewardGuardsResult {
    let result = super.call(
      'getLiquidationRewardGuards',
      'getLiquidationRewardGuards():(uint256,uint256)',
      []
    );

    return new PerpsMarketProxy__getLiquidationRewardGuardsResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getLiquidationRewardGuards(): ethereum.CallResult<PerpsMarketProxy__getLiquidationRewardGuardsResult> {
    let result = super.tryCall(
      'getLiquidationRewardGuards',
      'getLiquidationRewardGuards():(uint256,uint256)',
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PerpsMarketProxy__getLiquidationRewardGuardsResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getMaxCollateralAmount(synthMarketId: BigInt): BigInt {
    let result = super.call('getMaxCollateralAmount', 'getMaxCollateralAmount(uint128):(uint256)', [
      ethereum.Value.fromUnsignedBigInt(synthMarketId),
    ]);

    return result[0].toBigInt();
  }

  try_getMaxCollateralAmount(synthMarketId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      'getMaxCollateralAmount',
      'getMaxCollateralAmount(uint128):(uint256)',
      [ethereum.Value.fromUnsignedBigInt(synthMarketId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSynthDeductionPriority(): Array<BigInt> {
    let result = super.call(
      'getSynthDeductionPriority',
      'getSynthDeductionPriority():(uint128[])',
      []
    );

    return result[0].toBigIntArray();
  }

  try_getSynthDeductionPriority(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      'getSynthDeductionPriority',
      'getSynthDeductionPriority():(uint128[])',
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }
}

export class CreateAccountCall extends ethereum.Call {
  get inputs(): CreateAccountCall__Inputs {
    return new CreateAccountCall__Inputs(this);
  }

  get outputs(): CreateAccountCall__Outputs {
    return new CreateAccountCall__Outputs(this);
  }
}

export class CreateAccountCall__Inputs {
  _call: CreateAccountCall;

  constructor(call: CreateAccountCall) {
    this._call = call;
  }
}

export class CreateAccountCall__Outputs {
  _call: CreateAccountCall;

  constructor(call: CreateAccountCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateAccount1Call extends ethereum.Call {
  get inputs(): CreateAccount1Call__Inputs {
    return new CreateAccount1Call__Inputs(this);
  }

  get outputs(): CreateAccount1Call__Outputs {
    return new CreateAccount1Call__Outputs(this);
  }
}

export class CreateAccount1Call__Inputs {
  _call: CreateAccount1Call;

  constructor(call: CreateAccount1Call) {
    this._call = call;
  }

  get requestedAccountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CreateAccount1Call__Outputs {
  _call: CreateAccount1Call;

  constructor(call: CreateAccount1Call) {
    this._call = call;
  }
}

export class GrantPermissionCall extends ethereum.Call {
  get inputs(): GrantPermissionCall__Inputs {
    return new GrantPermissionCall__Inputs(this);
  }

  get outputs(): GrantPermissionCall__Outputs {
    return new GrantPermissionCall__Outputs(this);
  }
}

export class GrantPermissionCall__Inputs {
  _call: GrantPermissionCall;

  constructor(call: GrantPermissionCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get permission(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get user(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class GrantPermissionCall__Outputs {
  _call: GrantPermissionCall;

  constructor(call: GrantPermissionCall) {
    this._call = call;
  }
}

export class NotifyAccountTransferCall extends ethereum.Call {
  get inputs(): NotifyAccountTransferCall__Inputs {
    return new NotifyAccountTransferCall__Inputs(this);
  }

  get outputs(): NotifyAccountTransferCall__Outputs {
    return new NotifyAccountTransferCall__Outputs(this);
  }
}

export class NotifyAccountTransferCall__Inputs {
  _call: NotifyAccountTransferCall;

  constructor(call: NotifyAccountTransferCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get accountId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class NotifyAccountTransferCall__Outputs {
  _call: NotifyAccountTransferCall;

  constructor(call: NotifyAccountTransferCall) {
    this._call = call;
  }
}

export class RenouncePermissionCall extends ethereum.Call {
  get inputs(): RenouncePermissionCall__Inputs {
    return new RenouncePermissionCall__Inputs(this);
  }

  get outputs(): RenouncePermissionCall__Outputs {
    return new RenouncePermissionCall__Outputs(this);
  }
}

export class RenouncePermissionCall__Inputs {
  _call: RenouncePermissionCall;

  constructor(call: RenouncePermissionCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get permission(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class RenouncePermissionCall__Outputs {
  _call: RenouncePermissionCall;

  constructor(call: RenouncePermissionCall) {
    this._call = call;
  }
}

export class RevokePermissionCall extends ethereum.Call {
  get inputs(): RevokePermissionCall__Inputs {
    return new RevokePermissionCall__Inputs(this);
  }

  get outputs(): RevokePermissionCall__Outputs {
    return new RevokePermissionCall__Outputs(this);
  }
}

export class RevokePermissionCall__Inputs {
  _call: RevokePermissionCall;

  constructor(call: RevokePermissionCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get permission(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get user(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RevokePermissionCall__Outputs {
  _call: RevokePermissionCall;

  constructor(call: RevokePermissionCall) {
    this._call = call;
  }
}

export class InitOrUpgradeNftCall extends ethereum.Call {
  get inputs(): InitOrUpgradeNftCall__Inputs {
    return new InitOrUpgradeNftCall__Inputs(this);
  }

  get outputs(): InitOrUpgradeNftCall__Outputs {
    return new InitOrUpgradeNftCall__Outputs(this);
  }
}

export class InitOrUpgradeNftCall__Inputs {
  _call: InitOrUpgradeNftCall;

  constructor(call: InitOrUpgradeNftCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[2].value.toString();
  }

  get uri(): string {
    return this._call.inputValues[3].value.toString();
  }

  get impl(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class InitOrUpgradeNftCall__Outputs {
  _call: InitOrUpgradeNftCall;

  constructor(call: InitOrUpgradeNftCall) {
    this._call = call;
  }
}

export class InitOrUpgradeTokenCall extends ethereum.Call {
  get inputs(): InitOrUpgradeTokenCall__Inputs {
    return new InitOrUpgradeTokenCall__Inputs(this);
  }

  get outputs(): InitOrUpgradeTokenCall__Outputs {
    return new InitOrUpgradeTokenCall__Outputs(this);
  }
}

export class InitOrUpgradeTokenCall__Inputs {
  _call: InitOrUpgradeTokenCall;

  constructor(call: InitOrUpgradeTokenCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[2].value.toString();
  }

  get decimals(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get impl(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class InitOrUpgradeTokenCall__Outputs {
  _call: InitOrUpgradeTokenCall;

  constructor(call: InitOrUpgradeTokenCall) {
    this._call = call;
  }
}

export class RegisterUnmanagedSystemCall extends ethereum.Call {
  get inputs(): RegisterUnmanagedSystemCall__Inputs {
    return new RegisterUnmanagedSystemCall__Inputs(this);
  }

  get outputs(): RegisterUnmanagedSystemCall__Outputs {
    return new RegisterUnmanagedSystemCall__Outputs(this);
  }
}

export class RegisterUnmanagedSystemCall__Inputs {
  _call: RegisterUnmanagedSystemCall;

  constructor(call: RegisterUnmanagedSystemCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get endpoint(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RegisterUnmanagedSystemCall__Outputs {
  _call: RegisterUnmanagedSystemCall;

  constructor(call: RegisterUnmanagedSystemCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class NominateNewOwnerCall extends ethereum.Call {
  get inputs(): NominateNewOwnerCall__Inputs {
    return new NominateNewOwnerCall__Inputs(this);
  }

  get outputs(): NominateNewOwnerCall__Outputs {
    return new NominateNewOwnerCall__Outputs(this);
  }
}

export class NominateNewOwnerCall__Inputs {
  _call: NominateNewOwnerCall;

  constructor(call: NominateNewOwnerCall) {
    this._call = call;
  }

  get newNominatedOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class NominateNewOwnerCall__Outputs {
  _call: NominateNewOwnerCall;

  constructor(call: NominateNewOwnerCall) {
    this._call = call;
  }
}

export class RenounceNominationCall extends ethereum.Call {
  get inputs(): RenounceNominationCall__Inputs {
    return new RenounceNominationCall__Inputs(this);
  }

  get outputs(): RenounceNominationCall__Outputs {
    return new RenounceNominationCall__Outputs(this);
  }
}

export class RenounceNominationCall__Inputs {
  _call: RenounceNominationCall;

  constructor(call: RenounceNominationCall) {
    this._call = call;
  }
}

export class RenounceNominationCall__Outputs {
  _call: RenounceNominationCall;

  constructor(call: RenounceNominationCall) {
    this._call = call;
  }
}

export class SimulateUpgradeToCall extends ethereum.Call {
  get inputs(): SimulateUpgradeToCall__Inputs {
    return new SimulateUpgradeToCall__Inputs(this);
  }

  get outputs(): SimulateUpgradeToCall__Outputs {
    return new SimulateUpgradeToCall__Outputs(this);
  }
}

export class SimulateUpgradeToCall__Inputs {
  _call: SimulateUpgradeToCall;

  constructor(call: SimulateUpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SimulateUpgradeToCall__Outputs {
  _call: SimulateUpgradeToCall;

  constructor(call: SimulateUpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class AcceptMarketOwnershipCall extends ethereum.Call {
  get inputs(): AcceptMarketOwnershipCall__Inputs {
    return new AcceptMarketOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptMarketOwnershipCall__Outputs {
    return new AcceptMarketOwnershipCall__Outputs(this);
  }
}

export class AcceptMarketOwnershipCall__Inputs {
  _call: AcceptMarketOwnershipCall;

  constructor(call: AcceptMarketOwnershipCall) {
    this._call = call;
  }

  get perpsMarketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptMarketOwnershipCall__Outputs {
  _call: AcceptMarketOwnershipCall;

  constructor(call: AcceptMarketOwnershipCall) {
    this._call = call;
  }
}

export class CreateMarketCall extends ethereum.Call {
  get inputs(): CreateMarketCall__Inputs {
    return new CreateMarketCall__Inputs(this);
  }

  get outputs(): CreateMarketCall__Outputs {
    return new CreateMarketCall__Outputs(this);
  }
}

export class CreateMarketCall__Inputs {
  _call: CreateMarketCall;

  constructor(call: CreateMarketCall) {
    this._call = call;
  }

  get marketName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get marketSymbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get marketOwner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class CreateMarketCall__Outputs {
  _call: CreateMarketCall;

  constructor(call: CreateMarketCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class NominateMarketOwnerCall extends ethereum.Call {
  get inputs(): NominateMarketOwnerCall__Inputs {
    return new NominateMarketOwnerCall__Inputs(this);
  }

  get outputs(): NominateMarketOwnerCall__Outputs {
    return new NominateMarketOwnerCall__Outputs(this);
  }
}

export class NominateMarketOwnerCall__Inputs {
  _call: NominateMarketOwnerCall;

  constructor(call: NominateMarketOwnerCall) {
    this._call = call;
  }

  get perpsMarketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newNominatedOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class NominateMarketOwnerCall__Outputs {
  _call: NominateMarketOwnerCall;

  constructor(call: NominateMarketOwnerCall) {
    this._call = call;
  }
}

export class SetSpotMarketCall extends ethereum.Call {
  get inputs(): SetSpotMarketCall__Inputs {
    return new SetSpotMarketCall__Inputs(this);
  }

  get outputs(): SetSpotMarketCall__Outputs {
    return new SetSpotMarketCall__Outputs(this);
  }
}

export class SetSpotMarketCall__Inputs {
  _call: SetSpotMarketCall;

  constructor(call: SetSpotMarketCall) {
    this._call = call;
  }

  get spotMarket(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSpotMarketCall__Outputs {
  _call: SetSpotMarketCall;

  constructor(call: SetSpotMarketCall) {
    this._call = call;
  }
}

export class SetSynthetixCall extends ethereum.Call {
  get inputs(): SetSynthetixCall__Inputs {
    return new SetSynthetixCall__Inputs(this);
  }

  get outputs(): SetSynthetixCall__Outputs {
    return new SetSynthetixCall__Outputs(this);
  }
}

export class SetSynthetixCall__Inputs {
  _call: SetSynthetixCall;

  constructor(call: SetSynthetixCall) {
    this._call = call;
  }

  get synthetix(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSynthetixCall__Outputs {
  _call: SetSynthetixCall;

  constructor(call: SetSynthetixCall) {
    this._call = call;
  }
}

export class UpdatePriceDataCall extends ethereum.Call {
  get inputs(): UpdatePriceDataCall__Inputs {
    return new UpdatePriceDataCall__Inputs(this);
  }

  get outputs(): UpdatePriceDataCall__Outputs {
    return new UpdatePriceDataCall__Outputs(this);
  }
}

export class UpdatePriceDataCall__Inputs {
  _call: UpdatePriceDataCall;

  constructor(call: UpdatePriceDataCall) {
    this._call = call;
  }

  get perpsMarketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get feedId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpdatePriceDataCall__Outputs {
  _call: UpdatePriceDataCall;

  constructor(call: UpdatePriceDataCall) {
    this._call = call;
  }
}

export class ModifyCollateralCall extends ethereum.Call {
  get inputs(): ModifyCollateralCall__Inputs {
    return new ModifyCollateralCall__Inputs(this);
  }

  get outputs(): ModifyCollateralCall__Outputs {
    return new ModifyCollateralCall__Outputs(this);
  }
}

export class ModifyCollateralCall__Inputs {
  _call: ModifyCollateralCall;

  constructor(call: ModifyCollateralCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get synthMarketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amountDelta(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ModifyCollateralCall__Outputs {
  _call: ModifyCollateralCall;

  constructor(call: ModifyCollateralCall) {
    this._call = call;
  }
}

export class CancelOrderCall extends ethereum.Call {
  get inputs(): CancelOrderCall__Inputs {
    return new CancelOrderCall__Inputs(this);
  }

  get outputs(): CancelOrderCall__Outputs {
    return new CancelOrderCall__Outputs(this);
  }
}

export class CancelOrderCall__Inputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get accountId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelOrderCall__Outputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }
}

export class CommitOrderCall extends ethereum.Call {
  get inputs(): CommitOrderCall__Inputs {
    return new CommitOrderCall__Inputs(this);
  }

  get outputs(): CommitOrderCall__Outputs {
    return new CommitOrderCall__Outputs(this);
  }
}

export class CommitOrderCall__Inputs {
  _call: CommitOrderCall;

  constructor(call: CommitOrderCall) {
    this._call = call;
  }

  get commitment(): CommitOrderCallCommitmentStruct {
    return changetype<CommitOrderCallCommitmentStruct>(this._call.inputValues[0].value.toTuple());
  }
}

export class CommitOrderCall__Outputs {
  _call: CommitOrderCall;

  constructor(call: CommitOrderCall) {
    this._call = call;
  }

  get retOrder(): CommitOrderCallRetOrderStruct {
    return changetype<CommitOrderCallRetOrderStruct>(this._call.outputValues[0].value.toTuple());
  }

  get fees(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class CommitOrderCallCommitmentStruct extends ethereum.Tuple {
  get marketId(): BigInt {
    return this[0].toBigInt();
  }

  get accountId(): BigInt {
    return this[1].toBigInt();
  }

  get sizeDelta(): BigInt {
    return this[2].toBigInt();
  }

  get settlementStrategyId(): BigInt {
    return this[3].toBigInt();
  }

  get acceptablePrice(): BigInt {
    return this[4].toBigInt();
  }

  get trackingCode(): Bytes {
    return this[5].toBytes();
  }
}

export class CommitOrderCallRetOrderStruct extends ethereum.Tuple {
  get accountId(): BigInt {
    return this[0].toBigInt();
  }

  get marketId(): BigInt {
    return this[1].toBigInt();
  }

  get sizeDelta(): BigInt {
    return this[2].toBigInt();
  }

  get settlementStrategyId(): BigInt {
    return this[3].toBigInt();
  }

  get settlementTime(): BigInt {
    return this[4].toBigInt();
  }

  get acceptablePrice(): BigInt {
    return this[5].toBigInt();
  }

  get trackingCode(): Bytes {
    return this[6].toBytes();
  }
}

export class SettlePythOrderCall extends ethereum.Call {
  get inputs(): SettlePythOrderCall__Inputs {
    return new SettlePythOrderCall__Inputs(this);
  }

  get outputs(): SettlePythOrderCall__Outputs {
    return new SettlePythOrderCall__Outputs(this);
  }
}

export class SettlePythOrderCall__Inputs {
  _call: SettlePythOrderCall;

  constructor(call: SettlePythOrderCall) {
    this._call = call;
  }

  get result(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get extraData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SettlePythOrderCall__Outputs {
  _call: SettlePythOrderCall;

  constructor(call: SettlePythOrderCall) {
    this._call = call;
  }
}

export class AddToFeatureFlagAllowlistCall extends ethereum.Call {
  get inputs(): AddToFeatureFlagAllowlistCall__Inputs {
    return new AddToFeatureFlagAllowlistCall__Inputs(this);
  }

  get outputs(): AddToFeatureFlagAllowlistCall__Outputs {
    return new AddToFeatureFlagAllowlistCall__Outputs(this);
  }
}

export class AddToFeatureFlagAllowlistCall__Inputs {
  _call: AddToFeatureFlagAllowlistCall;

  constructor(call: AddToFeatureFlagAllowlistCall) {
    this._call = call;
  }

  get feature(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddToFeatureFlagAllowlistCall__Outputs {
  _call: AddToFeatureFlagAllowlistCall;

  constructor(call: AddToFeatureFlagAllowlistCall) {
    this._call = call;
  }
}

export class RemoveFromFeatureFlagAllowlistCall extends ethereum.Call {
  get inputs(): RemoveFromFeatureFlagAllowlistCall__Inputs {
    return new RemoveFromFeatureFlagAllowlistCall__Inputs(this);
  }

  get outputs(): RemoveFromFeatureFlagAllowlistCall__Outputs {
    return new RemoveFromFeatureFlagAllowlistCall__Outputs(this);
  }
}

export class RemoveFromFeatureFlagAllowlistCall__Inputs {
  _call: RemoveFromFeatureFlagAllowlistCall;

  constructor(call: RemoveFromFeatureFlagAllowlistCall) {
    this._call = call;
  }

  get feature(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveFromFeatureFlagAllowlistCall__Outputs {
  _call: RemoveFromFeatureFlagAllowlistCall;

  constructor(call: RemoveFromFeatureFlagAllowlistCall) {
    this._call = call;
  }
}

export class SetDeniersCall extends ethereum.Call {
  get inputs(): SetDeniersCall__Inputs {
    return new SetDeniersCall__Inputs(this);
  }

  get outputs(): SetDeniersCall__Outputs {
    return new SetDeniersCall__Outputs(this);
  }
}

export class SetDeniersCall__Inputs {
  _call: SetDeniersCall;

  constructor(call: SetDeniersCall) {
    this._call = call;
  }

  get feature(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get deniers(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class SetDeniersCall__Outputs {
  _call: SetDeniersCall;

  constructor(call: SetDeniersCall) {
    this._call = call;
  }
}

export class SetFeatureFlagAllowAllCall extends ethereum.Call {
  get inputs(): SetFeatureFlagAllowAllCall__Inputs {
    return new SetFeatureFlagAllowAllCall__Inputs(this);
  }

  get outputs(): SetFeatureFlagAllowAllCall__Outputs {
    return new SetFeatureFlagAllowAllCall__Outputs(this);
  }
}

export class SetFeatureFlagAllowAllCall__Inputs {
  _call: SetFeatureFlagAllowAllCall;

  constructor(call: SetFeatureFlagAllowAllCall) {
    this._call = call;
  }

  get feature(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get allowAll(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetFeatureFlagAllowAllCall__Outputs {
  _call: SetFeatureFlagAllowAllCall;

  constructor(call: SetFeatureFlagAllowAllCall) {
    this._call = call;
  }
}

export class SetFeatureFlagDenyAllCall extends ethereum.Call {
  get inputs(): SetFeatureFlagDenyAllCall__Inputs {
    return new SetFeatureFlagDenyAllCall__Inputs(this);
  }

  get outputs(): SetFeatureFlagDenyAllCall__Outputs {
    return new SetFeatureFlagDenyAllCall__Outputs(this);
  }
}

export class SetFeatureFlagDenyAllCall__Inputs {
  _call: SetFeatureFlagDenyAllCall;

  constructor(call: SetFeatureFlagDenyAllCall) {
    this._call = call;
  }

  get feature(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get denyAll(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetFeatureFlagDenyAllCall__Outputs {
  _call: SetFeatureFlagDenyAllCall;

  constructor(call: SetFeatureFlagDenyAllCall) {
    this._call = call;
  }
}

export class LiquidateCall extends ethereum.Call {
  get inputs(): LiquidateCall__Inputs {
    return new LiquidateCall__Inputs(this);
  }

  get outputs(): LiquidateCall__Outputs {
    return new LiquidateCall__Outputs(this);
  }
}

export class LiquidateCall__Inputs {
  _call: LiquidateCall;

  constructor(call: LiquidateCall) {
    this._call = call;
  }

  get accountId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LiquidateCall__Outputs {
  _call: LiquidateCall;

  constructor(call: LiquidateCall) {
    this._call = call;
  }
}

export class LiquidateFlaggedCall extends ethereum.Call {
  get inputs(): LiquidateFlaggedCall__Inputs {
    return new LiquidateFlaggedCall__Inputs(this);
  }

  get outputs(): LiquidateFlaggedCall__Outputs {
    return new LiquidateFlaggedCall__Outputs(this);
  }
}

export class LiquidateFlaggedCall__Inputs {
  _call: LiquidateFlaggedCall;

  constructor(call: LiquidateFlaggedCall) {
    this._call = call;
  }
}

export class LiquidateFlaggedCall__Outputs {
  _call: LiquidateFlaggedCall;

  constructor(call: LiquidateFlaggedCall) {
    this._call = call;
  }
}

export class AddSettlementStrategyCall extends ethereum.Call {
  get inputs(): AddSettlementStrategyCall__Inputs {
    return new AddSettlementStrategyCall__Inputs(this);
  }

  get outputs(): AddSettlementStrategyCall__Outputs {
    return new AddSettlementStrategyCall__Outputs(this);
  }
}

export class AddSettlementStrategyCall__Inputs {
  _call: AddSettlementStrategyCall;

  constructor(call: AddSettlementStrategyCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get strategy(): AddSettlementStrategyCallStrategyStruct {
    return changetype<AddSettlementStrategyCallStrategyStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class AddSettlementStrategyCall__Outputs {
  _call: AddSettlementStrategyCall;

  constructor(call: AddSettlementStrategyCall) {
    this._call = call;
  }

  get strategyId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AddSettlementStrategyCallStrategyStruct extends ethereum.Tuple {
  get strategyType(): i32 {
    return this[0].toI32();
  }

  get settlementDelay(): BigInt {
    return this[1].toBigInt();
  }

  get settlementWindowDuration(): BigInt {
    return this[2].toBigInt();
  }

  get priceWindowDuration(): BigInt {
    return this[3].toBigInt();
  }

  get priceVerificationContract(): Address {
    return this[4].toAddress();
  }

  get feedId(): Bytes {
    return this[5].toBytes();
  }

  get url(): string {
    return this[6].toString();
  }

  get settlementReward(): BigInt {
    return this[7].toBigInt();
  }

  get priceDeviationTolerance(): BigInt {
    return this[8].toBigInt();
  }

  get disabled(): boolean {
    return this[9].toBoolean();
  }
}

export class SetFundingParametersCall extends ethereum.Call {
  get inputs(): SetFundingParametersCall__Inputs {
    return new SetFundingParametersCall__Inputs(this);
  }

  get outputs(): SetFundingParametersCall__Outputs {
    return new SetFundingParametersCall__Outputs(this);
  }
}

export class SetFundingParametersCall__Inputs {
  _call: SetFundingParametersCall;

  constructor(call: SetFundingParametersCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get skewScale(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get maxFundingVelocity(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetFundingParametersCall__Outputs {
  _call: SetFundingParametersCall;

  constructor(call: SetFundingParametersCall) {
    this._call = call;
  }
}

export class SetLiquidationParametersCall extends ethereum.Call {
  get inputs(): SetLiquidationParametersCall__Inputs {
    return new SetLiquidationParametersCall__Inputs(this);
  }

  get outputs(): SetLiquidationParametersCall__Outputs {
    return new SetLiquidationParametersCall__Outputs(this);
  }
}

export class SetLiquidationParametersCall__Inputs {
  _call: SetLiquidationParametersCall;

  constructor(call: SetLiquidationParametersCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get initialMarginRatioD18(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get maintenanceMarginRatioD18(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get liquidationRewardRatioD18(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get maxLiquidationLimitAccumulationMultiplier(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get maxSecondsInLiquidationWindow(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get minimumPositionMargin(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class SetLiquidationParametersCall__Outputs {
  _call: SetLiquidationParametersCall;

  constructor(call: SetLiquidationParametersCall) {
    this._call = call;
  }
}

export class SetLockedOiRatioCall extends ethereum.Call {
  get inputs(): SetLockedOiRatioCall__Inputs {
    return new SetLockedOiRatioCall__Inputs(this);
  }

  get outputs(): SetLockedOiRatioCall__Outputs {
    return new SetLockedOiRatioCall__Outputs(this);
  }
}

export class SetLockedOiRatioCall__Inputs {
  _call: SetLockedOiRatioCall;

  constructor(call: SetLockedOiRatioCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get lockedOiRatioD18(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetLockedOiRatioCall__Outputs {
  _call: SetLockedOiRatioCall;

  constructor(call: SetLockedOiRatioCall) {
    this._call = call;
  }
}

export class SetMaxMarketSizeCall extends ethereum.Call {
  get inputs(): SetMaxMarketSizeCall__Inputs {
    return new SetMaxMarketSizeCall__Inputs(this);
  }

  get outputs(): SetMaxMarketSizeCall__Outputs {
    return new SetMaxMarketSizeCall__Outputs(this);
  }
}

export class SetMaxMarketSizeCall__Inputs {
  _call: SetMaxMarketSizeCall;

  constructor(call: SetMaxMarketSizeCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get maxMarketSize(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMaxMarketSizeCall__Outputs {
  _call: SetMaxMarketSizeCall;

  constructor(call: SetMaxMarketSizeCall) {
    this._call = call;
  }
}

export class SetOrderFeesCall extends ethereum.Call {
  get inputs(): SetOrderFeesCall__Inputs {
    return new SetOrderFeesCall__Inputs(this);
  }

  get outputs(): SetOrderFeesCall__Outputs {
    return new SetOrderFeesCall__Outputs(this);
  }
}

export class SetOrderFeesCall__Inputs {
  _call: SetOrderFeesCall;

  constructor(call: SetOrderFeesCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get makerFeeRatio(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get takerFeeRatio(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetOrderFeesCall__Outputs {
  _call: SetOrderFeesCall;

  constructor(call: SetOrderFeesCall) {
    this._call = call;
  }
}

export class SetSettlementStrategyEnabledCall extends ethereum.Call {
  get inputs(): SetSettlementStrategyEnabledCall__Inputs {
    return new SetSettlementStrategyEnabledCall__Inputs(this);
  }

  get outputs(): SetSettlementStrategyEnabledCall__Outputs {
    return new SetSettlementStrategyEnabledCall__Outputs(this);
  }
}

export class SetSettlementStrategyEnabledCall__Inputs {
  _call: SetSettlementStrategyEnabledCall;

  constructor(call: SetSettlementStrategyEnabledCall) {
    this._call = call;
  }

  get marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get strategyId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get enabled(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class SetSettlementStrategyEnabledCall__Outputs {
  _call: SetSettlementStrategyEnabledCall;

  constructor(call: SetSettlementStrategyEnabledCall) {
    this._call = call;
  }
}

export class SetLiquidationRewardGuardsCall extends ethereum.Call {
  get inputs(): SetLiquidationRewardGuardsCall__Inputs {
    return new SetLiquidationRewardGuardsCall__Inputs(this);
  }

  get outputs(): SetLiquidationRewardGuardsCall__Outputs {
    return new SetLiquidationRewardGuardsCall__Outputs(this);
  }
}

export class SetLiquidationRewardGuardsCall__Inputs {
  _call: SetLiquidationRewardGuardsCall;

  constructor(call: SetLiquidationRewardGuardsCall) {
    this._call = call;
  }

  get minLiquidationRewardUsd(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get maxLiquidationRewardUsd(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetLiquidationRewardGuardsCall__Outputs {
  _call: SetLiquidationRewardGuardsCall;

  constructor(call: SetLiquidationRewardGuardsCall) {
    this._call = call;
  }
}

export class SetMaxCollateralAmountCall extends ethereum.Call {
  get inputs(): SetMaxCollateralAmountCall__Inputs {
    return new SetMaxCollateralAmountCall__Inputs(this);
  }

  get outputs(): SetMaxCollateralAmountCall__Outputs {
    return new SetMaxCollateralAmountCall__Outputs(this);
  }
}

export class SetMaxCollateralAmountCall__Inputs {
  _call: SetMaxCollateralAmountCall;

  constructor(call: SetMaxCollateralAmountCall) {
    this._call = call;
  }

  get synthMarketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get collateralAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMaxCollateralAmountCall__Outputs {
  _call: SetMaxCollateralAmountCall;

  constructor(call: SetMaxCollateralAmountCall) {
    this._call = call;
  }
}

export class SetSynthDeductionPriorityCall extends ethereum.Call {
  get inputs(): SetSynthDeductionPriorityCall__Inputs {
    return new SetSynthDeductionPriorityCall__Inputs(this);
  }

  get outputs(): SetSynthDeductionPriorityCall__Outputs {
    return new SetSynthDeductionPriorityCall__Outputs(this);
  }
}

export class SetSynthDeductionPriorityCall__Inputs {
  _call: SetSynthDeductionPriorityCall;

  constructor(call: SetSynthDeductionPriorityCall) {
    this._call = call;
  }

  get newSynthDeductionPriority(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class SetSynthDeductionPriorityCall__Outputs {
  _call: SetSynthDeductionPriorityCall;

  constructor(call: SetSynthDeductionPriorityCall) {
    this._call = call;
  }
}
