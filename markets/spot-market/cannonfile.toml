name = "spot-market"
version = "<%= package.version %>"
description = "Spot market implementation"

[setting.coreProxyOwner]
description = "owner of v3 core proxy"
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[setting.marketOwner]
description = "spot market owner"
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[import.synthetix]
source = "synthetix:3.0.0-alpha.4"

[contract.SpotMarketFactoryModule]
artifact = "SpotMarketFactoryModule"

[contract.SpotMarketModule]
artifact = "SpotMarketModule"

[contract.WrapperModule]
artifact = "WrapperModule"

[contract.CoreModule]
artifact = "contracts/modules/CoreModule.sol:CoreModule"

[contract.InitialProxy]
artifact = "contracts/Proxy.sol:Proxy"
args = ["<%= contracts.CoreModule.address %>"]
abiOf = ["CoreModule"]
salt = "<%= settings.salt %>"
depends = ["contract.CoreModule"]

[invoke.acquire_ownership]
target = ["InitialProxy"]
from = "<%= settings.owner %>"
func = "initializeOwnerModule"
args = ["<%= settings.owner %>"]
depends = ["contract.InitialProxy"]

[run.generate_router]
exec = "@synthetixio/hardhat-router/utils/cannon"
func = "generate"
args = [
  "contracts/routers/chain-<%= chainId %>/Router.sol:Router",
  '''<%= JSON.stringify({
    CoreModule: contracts.CoreModule,
    SpotMarketFactoryModule: contracts.SpotMarketFactoryModule,
    SpotMarketModule: contracts.SpotMarketModule,
    WrapperModule: contracts.WrapperModule,
  }) %>'''
]
modified = ["contracts"]
depends = [
  "contract.CoreModule",
  "contract.SpotMarketFactoryModule",
  "contract.SpotMarketModule",
  "contract.WrapperModule"
]

[contract.Router]
artifact = "contracts/routers/chain-<%= chainId %>/Router.sol:Router"
abiOf = [
  "CoreModule",
  "SpotMarketFactoryModule",
  "SpotMarketModule",
  "WrapperModule"
]
depends = ["run.generate_router"]

[invoke.upgrade_proxy]
target = ["InitialProxy"]
from = "<%= settings.owner %>"
func = "upgradeTo"
args = ["<%= contracts.Router.address %>"]
factory.Proxy.abiOf = ["Router"]
factory.Proxy.event = "Upgraded"
factory.Proxy.arg = 0
depends = ["contract.Router"]

# # create synth router

# [run.generate_synth_router]
# exec = "@synthetixio/core-router"
# func = "generate"
# args = [
#   "contracts/routers/chain-<%= chainId %>/SynthRouter.sol:SynthRouter",
#   '''<%= JSON.stringify({
#     CoreModule: imports.core_router.contracts.CoreModule,
#     SpotMarketFactoryModule: contracts.Synth
#   }) %>'''
# ]
# modified = ["contracts"]
# depends = [
#   "import.core_router",
#   "contract.Synth"
# ]

# # add pool owner to feature flag allow list (owner must be pdao for this to be successful)
# [invoke.addSpotMarketToFeatureFlag]
# target = ["synthetix.CoreProxy"]
# func = "addToFeatureFlagAllowlist"
# from = "<%= settings.coreProxyOwner %>"
# args = ["0x72656769737465724d61726b6574000000000000000000000000000000000000", "<%= contracts.Proxy.address %>"] # formatBytes32String("registerMarket")
# depends = ['import.synthetix', 'invoke.upgrade_proxy']

# # post invokes

# [invoke.register_snxETH_market]
# target = ["Proxy"]
# from = "<%= settings.owner %>"
# func = "registerSynth"
# args = [
#   "Synthetic Ether",
#   "snxETH",
#   "<%= settings.owner %>"
# ]
# depends = ["invoke.addSpotMarketToFeatureFlag"]
