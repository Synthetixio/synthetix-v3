name = "spot-market"
version = "<%= package.version %>"
description = "Spot market implementation"

[setting.coreProxyOwner]
description = "owner of v3 core proxy"
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[setting.marketOwner]
description = "spot market owner"
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[import.synthetix]
source = "synthetix:3.0.0-alpha.2"

[contract.OwnerModule]
artifact = "contracts/modules/common/OwnerModule.sol:OwnerModule"

[contract.UpgradeModule]
artifact = "contracts/modules/common/UpgradeModule.sol:UpgradeModule"

[contract.SpotMarketFactoryModule]
artifact = "SpotMarketFactoryModule"

[contract.SpotMarketModule]
artifact = "SpotMarketModule"

[contract.WrapperModule]
artifact = "WrapperModule"

[run.generate_router]
exec = "../../packages/hardhat-router/dist/cannon/router.js"
func = "generate"
args = ["SpotMarketRouter", "contracts/modules/core", "contracts/modules/common"]
modified = []
depends = [
  "contract.SpotMarketFactoryModule",
  "contract.SpotMarketModule",
  "contract.WrapperModule",
  "contract.OwnerModule",
  "contract.UpgradeModule"
]

[contract.SpotMarketRouter]
artifact = "contracts/routers/chain-<%= chainId %>/SpotMarketRouter.sol:SpotMarketRouter"
abiOf = [
  "SpotMarketFactoryModule",
  "SpotMarketModule",
  "WrapperModule",
  "OwnerModule",
  "UpgradeModule"
]
depends = ["run.generate_router"]

[contract.SpotMarketProxy]
artifact = "contracts/Proxy.sol:Proxy"
args = ["<%= contracts.SpotMarketRouter.address %>"]
abiOf = ["SpotMarketRouter"]
depends = ["contract.SpotMarketRouter"]

# add pool owner to feature flag allow list (owner must be pdao for this to be successful)
[invoke.addSpotMarketToFeatureFlag]
target = ["synthetix.CoreProxy"]
func = "addToFeatureFlagAllowlist"
from = "<%= settings.coreProxyOwner %>"
args = ["0x72656769737465724d61726b6574000000000000000000000000000000000000", "<%= contracts.SpotMarketProxy.address %>"] # formatBytes32String("registerMarket")
depends = ['import.synthetix', 'contract.SpotMarketProxy']

[invoke.acquire_ownership]
target = ["SpotMarketProxy"]
from = "<%= settings.marketOwner %>"
func = "initializeOwnerModule"
args = ["<%= settings.marketOwner %>"]
depends = ["contract.SpotMarketProxy"]
