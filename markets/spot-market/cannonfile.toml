name = "synthetix-spot-market"
version = "<%= package.version %>"
description = "Spot market implementation"

[setting.owner]
description = "spot market owner"
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[setting.synthetixPackage]
defaultValue = "synthetix"

[setting.synthetixPreset]
defaultValue = "main"

[setting.salt]
defaultValue = "snax"

[import.synthetix]
source = "<%= settings.synthetixPackage %>"
preset = "<%= settings.synthetixPreset %>"

[contract.SpotMarketFactoryModule]
artifact = "SpotMarketFactoryModule"

[contract.AtomicOrderModule]
artifact = "AtomicOrderModule"

[contract.AsyncOrderModule]
artifact = "AsyncOrderModule"

[contract.AsyncOrderSettlementModule]
artifact = "AsyncOrderSettlementModule"

[contract.AsyncOrderConfigurationModule]
artifact = "AsyncOrderConfigurationModule"

[contract.WrapperModule]
artifact = "WrapperModule"

[contract.MarketConfigurationModule]
artifact = "MarketConfigurationModule"

[contract.SynthTokenModule]
artifact = "SynthTokenModule"

[contract.CoreModule]
artifact = "contracts/modules/CoreModule.sol:CoreModule"

[contract.FeatureFlagModule]
artifact = "contracts/modules/FeatureFlagModule.sol:FeatureFlagModule"

[contract.InitialSpotMarketProxy]
artifact = "contracts/Proxy.sol:Proxy"
args = ["<%= contracts.CoreModule.address %>", "<%= settings.owner %>"]
abiOf = ["CoreModule"]
salt = "<%= settings.salt %>"

# Core
[router.SpotMarketRouter]
contracts = [
    "CoreModule",
    "SpotMarketFactoryModule",
    "AtomicOrderModule",
    "AsyncOrderModule",
    "AsyncOrderSettlementModule",
    "AsyncOrderConfigurationModule",
    "WrapperModule",
    "MarketConfigurationModule",
    "FeatureFlagModule",
]

[invoke.upgradeSpotMarketProxy]
target = ["InitialSpotMarketProxy"]
fromCall.func = "owner"
func = "upgradeTo"
args = ["<%= contracts.SpotMarketRouter.address %>"]
factory.SpotMarketProxy.abiOf = ["SpotMarketRouter"]
factory.SpotMarketProxy.event = "Upgraded"
factory.SpotMarketProxy.arg = 0
factory.SpotMarketProxy.highlight = true

# create synth router
[router.SynthRouter]
contracts = ["CoreModule", "SynthTokenModule"]

[invoke.setSynthetixSystem]
target = ["SpotMarketProxy"]
fromCall.func = "owner"
func = "setSynthetix"
args = ["<%= imports.synthetix.contracts.CoreProxy.address %>"]

[invoke.setSynthImplementation]
target = ["SpotMarketProxy"]
fromCall.func = "owner"
func = "setSynthImplementation"
args = ["<%= contracts.SynthRouter.address %>"]

# add pool owner to feature flag allow list
[invoke.addSpotMarketToFeatureFlag]
target = ["synthetix.CoreProxy"]
func = "addToFeatureFlagAllowlist"
fromCall.func = "owner"
args = [
    "<%= formatBytes32String('registerMarket') %>",
    "<%= contracts.SpotMarketProxy.address %>",
]

[invoke.addCreateSynthToFeatureFlag]
target = ["SpotMarketProxy"]
func = "addToFeatureFlagAllowlist"
fromCall.func = "owner"
args = ["<%= formatBytes32String('createSynth') %>", "<%= settings.owner %>"]
