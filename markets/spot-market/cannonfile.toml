name = "spot-market"
version = "<%= package.version %>"
description = "Spot market implementation"

[setting.coreProxyOwner]
description = "owner of v3 core proxy"
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[setting.owner]
description = "spot market owner"
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[setting.synthetixPackage]
defaultValue = "synthetix:3.0.0-alpha.13"

[provision.synthetix]
source = "<%= settings.synthetixPackage %>"

[contract.SpotMarketFactoryModule]
artifact = "SpotMarketFactoryModule"

[contract.AtomicOrderModule]
artifact = "AtomicOrderModule"

[contract.AsyncOrderModule]
artifact = "AsyncOrderModule"

[contract.AsyncOrderConfigurationModule]
artifact = "AsyncOrderConfigurationModule"

[contract.WrapperModule]
artifact = "WrapperModule"

[contract.FeeConfigurationModule]
artifact = "FeeConfigurationModule"

[contract.SynthTokenModule]
artifact = "SynthTokenModule"

[contract.CoreModule]
artifact = "contracts/modules/CoreModule.sol:CoreModule"

[contract.FeatureFlagModule]
artifact = "contracts/modules/FeatureFlagModule.sol:FeatureFlagModule"

[contract.InitialSpotMarketProxy]
artifact = "contracts/Proxy.sol:Proxy"
args = ["<%= contracts.CoreModule.address %>", "<%= settings.owner %>"]
abiOf = ["CoreModule"]
salt = "<%= settings.salt %>"
depends = ["contract.CoreModule"]

# Core
[router.SpotMarketRouter]
contracts = [
  "CoreModule",
  "SpotMarketFactoryModule",
  "AtomicOrderModule",
  "AsyncOrderModule",
  "AsyncOrderConfigurationModule",
  "WrapperModule",
  "FeeConfigurationModule",
  "FeatureFlagModule"
]
depends = [
  "contract.CoreModule",
  "contract.SpotMarketFactoryModule",
  "contract.AtomicOrderModule",
  "contract.AsyncOrderModule",
  "contract.AsyncOrderConfigurationModule",
  "contract.WrapperModule",
  "contract.FeeConfigurationModule",
  "contract.FeatureFlagModule",
]

[invoke.upgrade_spot_market_proxy]
target = ["InitialSpotMarketProxy"]
from = "<%= settings.coreProxyOwner %>"
func = "upgradeTo"
args = ["<%= contracts.SpotMarketRouter.address %>"]
factory.SpotMarketProxy.abiOf = ["SpotMarketRouter"]
factory.SpotMarketProxy.event = "Upgraded"
factory.SpotMarketProxy.arg = 0
depends = ["contract.InitialSpotMarketProxy", "router.SpotMarketRouter"]

# create synth router
[router.SynthRouter]
contracts = [
  "CoreModule",
  "SynthTokenModule"
]
depends = [
  "contract.CoreModule",
  "contract.SynthTokenModule"
]

[invoke.initialize_spot_market_factory]
target = ["SpotMarketProxy"]
from = "<%= settings.coreProxyOwner %>"
func = "initialize"
args = [
  "<%= imports.synthetix.contracts.CoreProxy.address %>",
  "<%= imports.synthetix.contracts.USDProxy.address %>",
  "<%= imports.synthetix.imports.oracle_manager.contracts.Proxy.address %>",
  "<%= contracts.SynthRouter.address %>"
]
depends = ["invoke.upgrade_spot_market_proxy", "provision.synthetix", "router.SynthRouter"]

# add pool owner to feature flag allow list (owner must be pdao for this to be successful)
[invoke.addSpotMarketToFeatureFlag]
target = ["synthetix.CoreProxy"]
func = "addToFeatureFlagAllowlist"
from = "<%= settings.coreProxyOwner %>"
args = ["0x72656769737465724d61726b6574000000000000000000000000000000000000", "<%= contracts.SpotMarketProxy.address %>"] # formatBytes32String("registerMarket")
depends = ['provision.synthetix', 'invoke.upgrade_spot_market_proxy']

[invoke.addCreateSynthToFeatureFlag]
target = ["SpotMarketProxy"]
func = "addToFeatureFlagAllowlist"
from = "<%= settings.owner %>"
args = ["0x63726561746553796e7468000000000000000000000000000000000000000000", "<%= settings.owner %>"] # formatBytes32String("createSynth")
depends = ['invoke.initialize_spot_market_factory']
