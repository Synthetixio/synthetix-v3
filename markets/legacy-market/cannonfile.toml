name = "synthetix-legacy-market"
version = "0.1.0"
description = "Representation of Synthetix v2x, v3, and the LegacyMarket which allows for migration between them"

[setting.sc_pool_id]
defaultValue = "1"

[setting.market_id]
defaultValue = "1"

[setting.owner] # this has to be the same owner as CoreProxy
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[setting.pool_owner]
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[setting.v2x_package]
defaultValue = "synthetix:2.79.0-alpha"

[setting.v3_package]
defaultValue = "synthetix:3.0.0-alpha.5"

[setting.oracle_package]
defaultValue = "chainlink:0.7-mock"

[import.v2x]
source = "<%= settings.v2x_package %>"

[import.v3]
source = "<%= settings.v3_package %>"

[import.fakeOracle]
source = "<%= settings.oracle_package %>"

# deploy the legacy market
[contract.Market]
artifact = "LegacyMarket"

args = [
    "<%= settings.owner %>",
    "<%= imports.v2x.contracts.AddressResolver.address %>",
    "<%= imports.v3.contracts.CoreProxy.address %>"
]

depends = ["import.v2x", "import.v3"]

# add pool owner to pool feature flag allow list
[invoke.setFeatureFlagPool]
target = ["v3.CoreProxy"]
func = "addToFeatureFlagAllowlist"
args = ["0x637265617465506f6f6c00000000000000000000000000000000000000000000", "<%= settings.pool_owner %>"] # formatBytes32String("createPool")
fromCall.func = "owner"
depends = ["import.v3"]

[invoke.setFeatureFlagMarket]
target = ["v3.CoreProxy"]
func = "addToFeatureFlagAllowlist"
args = ["0x72656769737465724d61726b6574000000000000000000000000000000000000", "<%= contracts.Market.address %>"] # formatBytes32String("registerMarket")
fromCall.func = "owner"
depends = ["contract.Market"]

[invoke.setFeatureFlagAssociateDebt]
target = ["v3.CoreProxy"]
func = "addToFeatureFlagAllowlist"
args = ["0x6173736f63696174654465627400000000000000000000000000000000000000", "<%= contracts.Market.address %>"] # formatBytes32String("associateDebt")
fromCall.func = "owner"
depends = ["contract.Market"]

[invoke.registerMarket]
target = ["Market"]
from = "<%= settings.owner %>"
func = "registerMarket"
args = []

depends = ["invoke.setFeatureFlagMarket"]

[invoke.registerOracleManager]
target = ["v3.oracle_manager.Proxy"]
func = "registerNode"
args = [
    [],
    3,
    "0x000000000000000000000000<%= imports.fakeOracle.contracts.aggregator.address.slice(2) %>0000000000000000000000000000000000000000000000000000000000000000"
]

extra.snx_oracle_id.event = "NodeRegistered"
extra.snx_oracle_id.arg = 0

depends = ["import.v3", "import.fakeOracle"]

[invoke.configureSnxCollateral]
target = ["v3.CoreProxy"]
func = "configureCollateral"

args = [
    { tokenAddress = "<%= imports.v2x.contracts.ProxySynthetix.address %>", oracleNodeId = "<%= extras.snx_oracle_id %>", issuanceRatioD18 = "3000000000000000000", liquidationRatioD18 = "2000000000000000000", liquidationRewardD18 = "1000000000000000000", minDelegationD18 = "1000000000000000000", depositingEnabled = true }
]

fromCall.func = "owner"

depends = ["import.v2x", "invoke.registerOracleManager"]

# set up on v2x
[invoke.associate]
target = ["v2x.AddressResolver"]
func = "importAddresses"
args = [
    ["0x4c65676163794d61726b65740000000000000000000000000000000000000000"],
    # TODO nested interpolation
    ["<%= contracts.Market.address %>"]
    #["0x7dA35c7eE680A1e81eFCb2e9edD0c8D039D5211e"]
]

fromCall.func = "owner"

depends = ["contract.Market"]

[invoke.authorizedBroker]
target = ["v2x.SynthetixDebtShare"]
func = "addAuthorizedBroker"
args = ["<%= contracts.Market.address %>"]

fromCall.func = "owner"

depends = ["contract.Market"]

# create spartan council pool
[invoke.createPool]
target = ["v3.CoreProxy"]
from = "<%= settings.pool_owner %>"
func = "createPool"
args = ["<%= settings.sc_pool_id %>", "<%= settings.pool_owner %>"]

depends = ["invoke.setFeatureFlagPool"]

[invoke.configurePool]
target = ["v3.CoreProxy"]
func = "setPoolConfiguration"
from = "<%= settings.pool_owner %>"
args = [
    "<%= settings.sc_pool_id %>",
    [
        { marketId = "1", weightD18 = "1", maxDebtShareValueD18 = "1000000000000000000" },
    ]
]

depends = ["invoke.createPool", "invoke.registerMarket"]

[invoke.preferPool]
target = ["v3.CoreProxy"]
func = "setPreferredPool"
args = ["<%= settings.sc_pool_id %>"]

fromCall.func = "owner"

depends = ["invoke.createPool"]