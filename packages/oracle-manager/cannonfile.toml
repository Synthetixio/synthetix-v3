name = "oracle-manager"
version = "<%= package.version %>"
description = "Core synthetix oracle manager"

# `salt` here only affects proxy contract
[setting.salt]
description = "Change this to a unique string when deploying multiple instances of the system. Note that only the proxy contract will be unique."
defaultValue = "main"

[setting.owner]
description = "Admin user for the system"
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[contract.InitialModuleBundle]
artifact = "@synthetixio/main/contracts/modules/InitialModuleBundle.sol:InitialModuleBundle"

[contract.OwnerModule]
artifact = "contracts/modules/OwnerModule.sol:OwnerModule"

[contract.UpgradeModule]
artifact = "contracts/modules/UpgradeModule.sol:UpgradeModule"

[contract.OracleManagerModule]
artifact = "contracts/modules/OracleManagerModule.sol:OracleManagerModule"

[contract.InitialProxy]
artifact = "contracts/Proxy.sol:Proxy"
args = ["<%= contracts.InitialModuleBundle.address %>"]
abiOf = ["InitialModuleBundle"]
depends = ["contract.InitialModuleBundle"]

[run.generate_router]
exec = "../hardhat-router/dist/cannon/router.js"
func = "generate"
args = [
  "contracts/routers/chain-<%= chainId %>/Router.sol:Router",
  "contracts/modules"
]
modified = ["contracts/modules"]
depends = [
  "contract.OwnerModule",
  "contract.UpgradeModule",
  "contract.OracleManagerModule"
]

[contract.Router]
artifact = "contracts/routers/chain-<%= chainId %>/Router.sol:Router"
abiOf = ["OracleManagerModule"]
depends = ["run.generate_router"]

[invoke.acquire_ownership]
target = ["InitialProxy"]
from = "<%= settings.owner %>"
func = "initializeOwnerModule"
args = ["<%= settings.owner %>"]
depends = ["contract.InitialProxy"]

[invoke.upgrade_proxy]
target = ["InitialProxy"]
abi = "UpgradeModule"
from = "<%= settings.owner %>"
func = "upgradeTo"
args = ["<%= contracts.Router.address %>"]
factory.Proxy.abiOf = ["Router"]
factory.Proxy.event = "Upgraded"
factory.Proxy.arg = 0
depends = ["invoke.acquire_ownership", "contract.Router"]
