name = "synthetix-governance"
description = "Governance cotracts for on chain voting"
version = "0.0.1"

# Deployment Owner, defaults to first hardhat account
[setting.owner_address]
defaultValue = "0xe3B0C44298FC1C149AfBF4C8996fb92427aE41E4"

[contract.election_module]
artifact = "contracts/modules/ElectionModule.sol:ElectionModule"
step = 1

[contract.owner_module]
artifact = "contracts/modules/OwnerModule.sol:OwnerModule"
step = 1

[contract.upgrade_module]
artifact = "contracts/modules/UpgradeModule.sol:UpgradeModule"
step = 1

[run.generate_router]
exec = "scripts/generate-router.js"
func = "generateRouter"
step = 2
args = [
  "contracts/modules/ElectionModule.sol:ElectionModule",
  "<%= outputs.self.contracts.election_module.address %>",
  "contracts/modules/OwnerModule.sol:OwnerModule",
  "<%= outputs.self.contracts.owner_module.address %>",
  "contracts/modules/UpgradeModule.sol:UpgradeModule",
  "<%= outputs.self.contracts.upgrade_module.address %>"
]

[contract.router]
artifact = "contracts/Router.sol:Router"
step = 3

[contract.proxy]
artifact = "contracts/Proxy.sol:Proxy"
step = 4
args = ["<%= outputs.self.contracts.router.address %>"]

[invoke.initialize_owner_module]
addresses = ["<%= outputs.self.contracts.proxy.address %>"]
abi = "<%= outputs.self.contracts.owner_module.abi %>"
func = "initializeOwnerModule"
args = ["<%= settings.owner_address %>",]
step = 5
