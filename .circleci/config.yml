version: 2.1

parameters:
  node-version:
    type: string
    default: "16.20.1"

commands:
  yarn-install:
    steps:
      - run: yarn install --immutable --immutable-cache

jobs:
  docgen:
    docker:
      - image: cimg/node:<< pipeline.parameters.node-version >>
    environment:
      - GIT_PAGER: cat
    working_directory: ~/synthetix-v3
    steps:
      - add_ssh_keys:
          fingerprints: "46:05:bf:bf:84:e8:af:09:35:05:89:09:62:45:84:7c"
      - run:
          working_directory: ~/
          name: "Checkout docs"
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git clone git@github.com:Synthetixio/Synthetix-Gitbook-v3.git --verbose --depth 1 --no-tags --single-branch synthetix-gitbook-v3

      - checkout
      - yarn-install

      - run:
          name: "Build TS"
          command: yarn workspaces foreach --topological-dev --verbose run build:ts
      - run:
          name: "Generate docs for each contract"
          command: yarn workspaces foreach --verbose run docgen
      - run:
          name: "Generate combined smart-contracts.md"
          command: yarn workspace @synthetixio/docgen run docgen:contracts
      - run:
          name: "Generate ABIs for each supported network"
          command: yarn workspace @synthetixio/docgen run abis
      - run:
          name: "Generate combined addresses-+-abis.md"
          command: yarn workspace @synthetixio/docgen run docgen:abis

      - store_artifacts:
          path: "docs"
          destination: "."

      - run:
          working_directory: ~/synthetix-gitbook-v3
          name: "Update docs and push to smart-contracts branch"
          command: |
            cp ~/synthetix-v3/docs/smart-contracts.md ./for-developers/smart-contracts.md
            cp ~/synthetix-v3/docs/addresses-+-abis.md ./for-developers/addresses-+-abis.md
            cp ~/synthetix-v3/docs/abis/*.json ./for-developers/abis/

            STATUS=$(git status)
            if [[ $STATUS == *"nothing to commit, working tree clean"* ]]; then
              echo "SKIP. Working tree is clean. No changes to Smart Contracts docs"
              exit 0
            fi

            git branch smart-contracts
            git checkout smart-contracts

            git config --global user.email nikita@cc.snxdao.io
            git config --global user.name Noisekit

            git add ./for-developers/smart-contracts.md
            git add ./for-developers/addresses-+-abis.md
            git add ./for-developers/abis
            git commit -m "Update Smart Contracts"
            git push --set-upstream --force origin smart-contracts

      - run:
          working_directory: ~/synthetix-gitbook-v3
          name: "Create Pull Request for smart-contracts branch"
          command: |
            STATUS=$(git status)
            if [[ $STATUS == *"nothing to commit, working tree clean"* ]]; then
              echo "SKIP. Working tree is clean. No changes to Smart Contracts docs"
              exit 0
            fi

            PR_URL=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              https://api.github.com/repos/Synthetixio/Synthetix-Gitbook-v3/pulls?state=open | \
              jq -r '.[] | select(.head.ref=="smart-contracts") | .html_url')

            # If no PR exists with the branch "smart-contracts", create one
            # If PR already exists it would be updated with the most recent docs via forced push
            if [ -z "$PR_URL" ]; then
              curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
                https://api.github.com/repos/Synthetixio/Synthetix-Gitbook-v3/pulls \
                -d '{
                  "title": "Update Smart Contracts",
                  "head": "smart-contracts", 
                  "base": "en"
                }'
            else
              echo "Pull Request already exists: $PR_URL"
            fi

workflows:
  version: 2.1

  docgen:
    jobs:
      - docgen:
          name: "docgen-release"
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - docgen:
          name: "docgen-dev"
          filters:
            tags:
              ignore: /.*/
            branches:
              only: /docgen/
