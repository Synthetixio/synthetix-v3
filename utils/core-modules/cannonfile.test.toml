name = "core-modules"
version = "<%= package.version %>"
description = "Test Deployment for Synthetix's Core Modules project"

# `salt` here only affects proxy contract
[var.main]
salt = "core-modules"
owner = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

# Core Modules
[deploy.OwnerModule]
artifact = "contracts/modules/OwnerModule.sol:OwnerModule"

[deploy.UpgradeModule]
artifact = "contracts/modules/UpgradeModule.sol:UpgradeModule"

[deploy.CoreModule]
artifact = "contracts/modules/CoreModule.sol:CoreModule"

[deploy.AssociatedSystemsModule]
artifact = "contracts/modules/AssociatedSystemsModule.sol:AssociatedSystemsModule"

[deploy.FeatureFlagModule]
artifact = "contracts/modules/FeatureFlagModule.sol:FeatureFlagModule"

[deploy.TokenModule]
artifact = "contracts/modules/TokenModule.sol:TokenModule"

[deploy.DecayTokenModule]
artifact = "contracts/modules/DecayTokenModule.sol:DecayTokenModule"

[deploy.NftModule]
artifact = "contracts/modules/NftModule.sol:NftModule"

# Mocks
[deploy.SampleFeatureFlagModule]
artifact = "contracts/modules/mocks/SampleFeatureFlagModule.sol:SampleFeatureFlagModule"

[deploy.SampleOwnedModule]
artifact = "contracts/modules/mocks/SampleOwnedModule.sol:SampleOwnedModule"

[deploy.GenericModule]
artifact = "contracts/modules/mocks/GenericModule.sol:GenericModule"

# Setup Initial Proxy
[deploy.Proxy]
artifact = "contracts/Proxy.sol:Proxy"
args = ["<%= contracts.CoreRouter.address %>", "<%= settings.owner %>"]
abiOf = ["CoreRouter"]
salt = "<%= settings.salt %>"

# Core Router
[router.CoreRouter]
contracts = ["CoreModule"]

# AssociatedSystemsModule Router
[router.AssociatedSystemsModuleRouter]
contracts = ["CoreModule", "AssociatedSystemsModule"]

# TokenModule Router
[router.TokenModuleRouter]
contracts = ["CoreModule", "TokenModule"]

[router.TokenModuleRouter2]
contracts = ["CoreModule", "TokenModule"]
salt = "second"

[router.TokenModuleRouter3]
contracts = ["CoreModule", "TokenModule"]
salt = "third"

# DecayTokenModule Router
[router.DecayTokenModuleRouter]
contracts = ["CoreModule", "DecayTokenModule"]

# Sample Router
[router.SampleRouter]
contracts = ["CoreModule", "SampleOwnedModule"]

# NftModule Router ( we need multiple for tests)
[router.NftModuleRouter]
contracts = ["CoreModule", "NftModule"]

[router.NftModuleRouter2]
contracts = ["CoreModule", "NftModule"]
salt = "second"

[router.NftModuleRouter3]
contracts = ["CoreModule", "NftModule"]
salt = "third"

# FeatureFlagModule Router
[router.FeatureFlagModuleRouter]
contracts = ["CoreModule", "FeatureFlagModule", "SampleFeatureFlagModule"]
