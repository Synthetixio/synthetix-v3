name = "lido-wsteth-to-eth-ratio-oracle"
version = "<%= package.version %>-testable"

# --- Imports --- #

[import.synthetix]
source = "synthetix:latest"

# --- wstETH mock (Lido contracts) --- #

[contract.WstETHMock]
artifact = "contracts/mocks/WstETHMock.sol:WstETHMock"

[contract.LidoWstEthToStEthRatioOracle]
artifact = "contracts/LidoWstEthToStEthRatioOracle.sol:LidoWstEthToStEthRatioOracle"
args = ["<%= contracts.WstETHMock.address %>"]

[invoke.registerNode_LidoWstEthToStEthRatioOracle]
target = ["synthetix.oracle_manager.Proxy"]
func = "registerNode"
args = [
    # external node
    2,
    # contract
    "<%= defaultAbiCoder.encode(['address'], [contracts.LidoWstEthToStEthRatioOracle.address]) %>",
    [
    ],
]
extra.lidoWstEthToStEthRatioOracleId.event = "NodeRegistered"
extra.lidoWstEthToStEthRatioOracleId.arg = 0
depends = ["contract.WstETHMock", "contract.LidoWstEthToStEthRatioOracle"]

# --- stETH <> ETH ratio oracle (Chainlink oracle) --- #

[contract.StEthToEthMock]
artifact = "contracts/mocks/AggregatorV3Mock.sol:AggregatorV3Mock"
args = []

[invoke.registerNode_StEthToEthMock]
target = ["synthetix.oracle_manager.Proxy"]
func = "registerNode"
args = [
    # chainlink aggregator type
    3,
    # contract, twap, decimals
    "<%= defaultAbiCoder.encode(['address', 'uint256', 'uint8'], [contracts.StEthToEthMock.address, 0, 18]) %>",
    [
    ],
]
extra.stEthToEthNodeId.event = "NodeRegistered"
extra.stEthToEthNodeId.arg = 0
depends = ["contract.StEthToEthMock"]

# --- wstETH oracle `reduce(stETH/USD, ethTosteth)` --- #

[invoke.registerNode_chainlinkWstEthNode]
target = ["synthetix.oracle_manager.Proxy"]
func = "registerNode"
args = [
    # reducer node
    1,
    # mulDecimal
    "<%= defaultAbiCoder.encode(['uint256'], [7]) %>",
    # stETH/USD, stETH<>wstETH
    [
        "<%= extras.stEthToEthNodeId %>",
        "<%= extras.lidoWstEthToStEthRatioOracleId %>",
    ],
]
extra.chainlinkWstEthNodeId.event = "NodeRegistered"
extra.chainlinkWstEthNodeId.arg = 0
depends = [
    "import.synthetix",
    "invoke.registerNode_LidoWstEthToStEthRatioOracle",
    "invoke.registerNode_StEthToEthMock",
]
