name = "buyback-snx"
version = "<%= package.version %>-testable"

[setting.premium]
defaultValue = "10000000000000000"

[setting.snx_fee_share]
defaultValue = "500000000000000000"

[provision.snx]
source = "mintable-token@permissionless-mint"
options.symbol = "SNX"
options.name = "Mintable SNX"
options.salt = "snx"

[provision.usd]
source = "mintable-token@permissionless-mint"
options.symbol = "USD"
options.name = "Mintable USD"
options.salt = "usd"

[setting.staleness_tolerance]
defaultValue = "60"

[provision.oracle_manager]
source = "oracle-manager"

# Latest Price
[invoke.registerConstantNode]
target = ["oracle_manager.Proxy"]
func = "registerNode"
args = [
    8, # constant node type
    "<%= defaultAbiCoder.encode(['int256'], [parseEther('10')]) %>",
    [
    ],
]
extra.snx_pyth_oracle_id.event = "NodeRegistered"
extra.snx_pyth_oracle_id.arg = 0

[contract.buyback_snx]
artifact = "contracts/BuybackSnx.sol:BuybackSnx"
args = [
    "<%= settings.premium %>",
    "<%= settings.snx_fee_share %>",
    "<%= imports.oracle_manager.contracts.Proxy.address %>",
    "<%= extras.snx_pyth_oracle_id %>",
    "<%= imports.snx.contracts.MintableToken.address %>",
    "<%= imports.usd.contracts.MintableToken.address %>",
]
create2 = true
