name = "buyback-snx"
version = "<%= package.version %>-testable"

[var.main]
premium = "10000000000000000"
snx_fee_share = "500000000000000000"
staleness_tolerance = "60"

[clone.snx]
source = "mintable-token@permissionless-mint"
options.symbol = "SNX"
options.name = "Mintable SNX"
options.salt = "snx"

[clone.usd]
source = "mintable-token@permissionless-mint"
options.symbol = "USD"
options.name = "Mintable USD"
options.salt = "usd"

[clone.oracle_manager]
source = "oracle-manager"

# Latest Price
[invoke.registerConstantNode]
target = ["oracle_manager.Proxy"]
func = "registerNode"
args = [
    8, # constant node type
    "<%= defaultAbiCoder.encode(['int256'], [parseEther('10')]) %>",
    [
    ],
]
var.snx_pyth_oracle_id.event = "NodeRegistered"
var.snx_pyth_oracle_id.arg = 0

[deploy.buyback_snx]
artifact = "contracts/BuybackSnx.sol:BuybackSnx"
args = [
    "<%= settings.premium %>",
    "<%= settings.snx_fee_share %>",
    "<%= imports.oracle_manager.contracts.Proxy.address %>",
    "<%= settings.snx_pyth_oracle_id %>",
    "<%= imports.snx.contracts.MintableToken.address %>",
    "<%= imports.usd.contracts.MintableToken.address %>",
]
create2 = true
