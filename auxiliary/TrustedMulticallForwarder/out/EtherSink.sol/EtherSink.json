{
  "abi": [
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6080604052348015600f57600080fd5b50604580601d6000396000f3fe608060405236600a57005b600080fdfea2646970667358221220d273851a15d546e640399041ea27d6bb0773db63c5c3c047a3d415c3256048dd64736f6c63430008140033",
    "sourceMap": "164:193:36:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405236600a57005b600080fdfea2646970667358221220d273851a15d546e640399041ea27d6bb0773db63c5c3c047a3d415c3256048dd64736f6c63430008140033",
    "sourceMap": "164:193:36:-:0;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"andreas@nascent.xyz\",\"kind\":\"dev\",\"methods\":{},\"title\":\"EtherSink\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Receives Ether, that's about it \\\\( o_o )/\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/EtherSink.sol\":\"EtherSink\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"test/mocks/EtherSink.sol\":{\"keccak256\":\"0xfe7a756af0f1153a148661b17d119add718b13c54cf0c08f345048924636def0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5296c040f5dd7ee6c210733117ede0b1f63c1fcd0413336188b6e9f82aadecb7\",\"dweb:/ipfs/QmRXcZny9f1BqpVe7zEcwoZczxTdCAc7bjvZ89WirxokaM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/mocks/EtherSink.sol": "EtherSink"
      },
      "libraries": {}
    },
    "sources": {
      "test/mocks/EtherSink.sol": {
        "keccak256": "0xfe7a756af0f1153a148661b17d119add718b13c54cf0c08f345048924636def0",
        "urls": [
          "bzz-raw://5296c040f5dd7ee6c210733117ede0b1f63c1fcd0413336188b6e9f82aadecb7",
          "dweb:/ipfs/QmRXcZny9f1BqpVe7zEcwoZczxTdCAc7bjvZ89WirxokaM"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/mocks/EtherSink.sol",
    "id": 50115,
    "exportedSymbols": {
      "EtherSink": [
        50114
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:326:36",
    "nodes": [
      {
        "id": 50107,
        "nodeType": "PragmaDirective",
        "src": "32:23:36",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 50114,
        "nodeType": "ContractDefinition",
        "src": "164:193:36",
        "nodes": [
          {
            "id": 50113,
            "nodeType": "FunctionDefinition",
            "src": "326:29:36",
            "nodes": [],
            "body": {
              "id": 50112,
              "nodeType": "Block",
              "src": "353:2:36",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 50109,
              "nodeType": "StructuredDocumentation",
              "src": "261:62:36",
              "text": "@notice Allows the test to receive eth via low level calls"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:2:36"
            },
            "returnParameters": {
              "id": 50111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:0:36"
            },
            "scope": 50114,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EtherSink",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 50108,
          "nodeType": "StructuredDocumentation",
          "src": "57:107:36",
          "text": "@title EtherSink\n @notice Receives Ether, that's about it \\( o_o )/\n @author andreas@nascent.xyz"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50114
        ],
        "name": "EtherSink",
        "nameLocation": "173:9:36",
        "scope": 50115,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 36
}