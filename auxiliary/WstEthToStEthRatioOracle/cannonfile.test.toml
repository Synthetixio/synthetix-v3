name = "wsteth-to-steth-ratio-oracle"
version = "<%= package.version %>-testable"

# --- Imports --- #

[import.synthetix]
source = "synthetix:latest"

# --- wstETH mock (Lido contracts) --- #

[contract.WstETHMock]
artifact = "contracts/mocks/WstETHMock.sol:WstETHMock"

[contract.WstEthToStEthRatioOracle]
artifact = "contracts/WstEthToStEthRatioOracle.sol:WstEthToStEthRatioOracle"
args = ["<%= contracts.WstETHMock.address %>"]

[invoke.registerNode_WstEthToStEthRatioOracle]
target = ["synthetix.oracle_manager.Proxy"]
func = "registerNode"
args = [
    # external node
    2,
    # contract
    "<%= defaultAbiCoder.encode(['address'], [contracts.WstEthToStEthRatioOracle.address]) %>",
    [
    ],
]
extra.wstEthToStEthRatioOracleNodeId.event = "NodeRegistered"
extra.wstEthToStEthRatioOracleNodeId.arg = 0
depends = ["contract.WstETHMock", "contract.WstEthToStEthRatioOracle"]

# --- CL stETH/ETH oracle --- #

[contract.StEthAggregatorV3MockOracleNode]
artifact = "contracts/mocks/AggregatorV3Mock.sol:AggregatorV3Mock"
args = []

[invoke.registerNode_StEthAggregatorV3MockOracleNode]
target = ["synthetix.oracle_manager.Proxy"]
func = "registerNode"
args = [
    # chainlink aggregator type
    3,
    # contract, twap, decimals
    "<%= defaultAbiCoder.encode(['address', 'uint256', 'uint8'], [contracts.StEthAggregatorV3MockOracleNode.address, 0, 18]) %>",
    [
    ],
]
extra.stEthAggregatorV3MockOracleNodeId.event = "NodeRegistered"
extra.stEthAggregatorV3MockOracleNodeId.arg = 0
depends = ["contract.StEthAggregatorV3MockOracleNode"]

# --- wstETH/USD oracle --- #

[invoke.registerNode_WstEthOracleNode]
target = ["synthetix.oracle_manager.Proxy"]
func = "registerNode"
args = [
    # reducer node
    1,
    # mulDecimal
    "<%= defaultAbiCoder.encode(['uint256'], [7]) %>",
    # stETH/USD, wstETH/stETH
    [
        "<%= extras.stEthAggregatorV3MockOracleNodeId %>",
        "<%= extras.wstEthToStEthRatioOracleNodeId %>",
    ],
]
extra.wstEthOracleNodeId.event = "NodeRegistered"
extra.wstEthOracleNodeId.arg = 0
depends = [
    "import.synthetix",
    "invoke.registerNode_WstEthToStEthRatioOracle",
    "invoke.registerNode_StEthAggregatorV3MockOracleNode",
]
